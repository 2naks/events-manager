// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MyEvents Component MyEvents form  should render self it should render for dumb component 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <MyEvents />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": MyEvents {
      "_reactInternalFiber": FiberNode {
        "_debugID": 4,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 3,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
          },
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <nav
                      class="navbar navbar-toggleable-md navbar-light bg-faded"
                    >
                      <button
                        aria-controls="navbarText"
                        aria-expanded="false"
                        aria-label="Toggle navigation"
                        class="navbar-toggler navbar-toggler-right"
                        data-target="#navbarText"
                        data-toggle="collapse"
                        type="button"
                      >
                        <span
                          class="navbar-toggler-icon"
                        />
                      </button>
                      <a
                        class="navbar-brand"
                        href="/"
                      >
                        EVENTS MANAGER
                      </a>
                      <div
                        class="collapse navbar-collapse"
                        id="navbarText"
                      >
                        <ul
                          class="navbar-nav ml-auto"
                        >
                          <li
                            class="nav-item active"
                          >
                            <a
                              class="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                class="sr-only"
                              >
                                (current)
                              </span>
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/centers"
                            >
                              Centers
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/SignOut"
                            >
                              Sign Out 
                            </a>
                          </li>
                        </ul>
                      </div>
                    </nav>
                    <div
                      class="container events"
                    >
                      <div
                        class="row event-row"
                      />
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "hydrate": false,
                "isReadyForCommit": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "callbackList": null,
                "expirationTime": 1,
                "first": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "nextCallback": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                },
                "hasForceUpdate": false,
                "isInitialized": false,
                "isProcessing": false,
                "last": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "nextCallback": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                },
              },
            },
            "child": [Circular],
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
              />,
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                  <nav
                    class="navbar navbar-toggleable-md navbar-light bg-faded"
                  >
                    <button
                      aria-controls="navbarText"
                      aria-expanded="false"
                      aria-label="Toggle navigation"
                      class="navbar-toggler navbar-toggler-right"
                      data-target="#navbarText"
                      data-toggle="collapse"
                      type="button"
                    >
                      <span
                        class="navbar-toggler-icon"
                      />
                    </button>
                    <a
                      class="navbar-brand"
                      href="/"
                    >
                      EVENTS MANAGER
                    </a>
                    <div
                      class="collapse navbar-collapse"
                      id="navbarText"
                    >
                      <ul
                        class="navbar-nav ml-auto"
                      >
                        <li
                          class="nav-item active"
                        >
                          <a
                            class="nav-link"
                            href="/"
                          >
                            Home 
                            <span
                              class="sr-only"
                            >
                              (current)
                            </span>
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/addevent"
                          >
                            Add Event
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/centers"
                          >
                            Centers
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/SignOut"
                          >
                            Sign Out 
                          </a>
                        </li>
                      </ul>
                    </div>
                  </nav>
                  <div
                    class="container events"
                  >
                    <div
                      class="row event-row"
                    />
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "finishedWork": null,
              "hydrate": false,
              "isReadyForCommit": false,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "type": null,
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 5,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 12,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "className": "navbar-toggler-icon",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <span
                    class="navbar-toggler-icon"
                  />,
                  "tag": 5,
                  "type": "span",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "aria-controls": "navbarText",
                  "aria-expanded": "false",
                  "aria-label": "Toggle navigation",
                  "children": <span
                    className="navbar-toggler-icon"
                  />,
                  "className": "navbar-toggler navbar-toggler-right",
                  "data-target": "#navbarText",
                  "data-toggle": "collapse",
                  "type": "button",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "EVENTS MANAGER",
                    "className": "navbar-brand",
                    "href": "/",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 13,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 14,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 18,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 19,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": "Home ",
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 20,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "(current)",
                                "className": "sr-only",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <span
                                class="sr-only"
                              >
                                (current)
                              </span>,
                              "tag": 5,
                              "type": "span",
                              "updateQueue": null,
                            },
                            "stateNode": Home ,
                            "tag": 6,
                            "type": null,
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              "Home ",
                              <span
                                className="sr-only"
                              >
                                (current)
                              </span>,
                            ],
                            "className": "nav-link",
                            "href": "/",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <a
                            class="nav-link"
                            href="/"
                          >
                            Home 
                            <span
                              class="sr-only"
                            >
                              (current)
                            </span>
                          </a>,
                          "tag": 5,
                          "type": "a",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <a
                            className="nav-link"
                            href="/"
                          >
                            Home 
                            <span
                              className="sr-only"
                            >
                              (current)
                            </span>
                          </a>,
                          "className": "nav-item active",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 15,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 21,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Add Event",
                              "className": "nav-link",
                              "href": "/addevent",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <a
                              class="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>,
                            "tag": 5,
                            "type": "a",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <a
                              className="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>,
                            "className": "nav-item",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 16,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 22,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Centers",
                                "className": "nav-link",
                                "href": "/centers",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <a
                                class="nav-link"
                                href="/centers"
                              >
                                Centers
                              </a>,
                              "tag": 5,
                              "type": "a",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 2,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <a
                                className="nav-link"
                                href="/centers"
                              >
                                Centers
                              </a>,
                              "className": "nav-item",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 17,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 23,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Sign Out ",
                                  "className": "nav-link",
                                  "href": "/SignOut",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <a
                                  class="nav-link"
                                  href="/SignOut"
                                >
                                  Sign Out 
                                </a>,
                                "tag": 5,
                                "type": "a",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 3,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <a
                                  className="nav-link"
                                  href="/SignOut"
                                >
                                  Sign Out 
                                </a>,
                                "className": "nav-item",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <li
                                class="nav-item"
                              >
                                <a
                                  class="nav-link"
                                  href="/SignOut"
                                >
                                  Sign Out 
                                </a>
                              </li>,
                              "tag": 5,
                              "type": "li",
                              "updateQueue": null,
                            },
                            "stateNode": <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/centers"
                              >
                                Centers
                              </a>
                            </li>,
                            "tag": 5,
                            "type": "li",
                            "updateQueue": null,
                          },
                          "stateNode": <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>
                          </li>,
                          "tag": 5,
                          "type": "li",
                          "updateQueue": null,
                        },
                        "stateNode": <li
                          class="nav-item active"
                        >
                          <a
                            class="nav-link"
                            href="/"
                          >
                            Home 
                            <span
                              class="sr-only"
                            >
                              (current)
                            </span>
                          </a>
                        </li>,
                        "tag": 5,
                        "type": "li",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <li
                            className="nav-item active"
                          >
                            <a
                              className="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                className="sr-only"
                              >
                                (current)
                              </span>
                            </a>
                          </li>,
                          <li
                            className="nav-item"
                          >
                            <a
                              className="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>
                          </li>,
                          <li
                            className="nav-item"
                          >
                            <a
                              className="nav-link"
                              href="/centers"
                            >
                              Centers
                            </a>
                          </li>,
                          <li
                            className="nav-item"
                          >
                            <a
                              className="nav-link"
                              href="/SignOut"
                            >
                              Sign Out 
                            </a>
                          </li>,
                        ],
                        "className": "navbar-nav ml-auto",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <ul
                        class="navbar-nav ml-auto"
                      >
                        <li
                          class="nav-item active"
                        >
                          <a
                            class="nav-link"
                            href="/"
                          >
                            Home 
                            <span
                              class="sr-only"
                            >
                              (current)
                            </span>
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/addevent"
                          >
                            Add Event
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/centers"
                          >
                            Centers
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/SignOut"
                          >
                            Sign Out 
                          </a>
                        </li>
                      </ul>,
                      "tag": 5,
                      "type": "ul",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <ul
                        className="navbar-nav ml-auto"
                      >
                        <li
                          className="nav-item active"
                        >
                          <a
                            className="nav-link"
                            href="/"
                          >
                            Home 
                            <span
                              className="sr-only"
                            >
                              (current)
                            </span>
                          </a>
                        </li>
                        <li
                          className="nav-item"
                        >
                          <a
                            className="nav-link"
                            href="/addevent"
                          >
                            Add Event
                          </a>
                        </li>
                        <li
                          className="nav-item"
                        >
                          <a
                            className="nav-link"
                            href="/centers"
                          >
                            Centers
                          </a>
                        </li>
                        <li
                          className="nav-item"
                        >
                          <a
                            className="nav-link"
                            href="/SignOut"
                          >
                            Sign Out 
                          </a>
                        </li>
                      </ul>,
                      "className": "collapse navbar-collapse",
                      "id": "navbarText",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="collapse navbar-collapse"
                      id="navbarText"
                    >
                      <ul
                        class="navbar-nav ml-auto"
                      >
                        <li
                          class="nav-item active"
                        >
                          <a
                            class="nav-link"
                            href="/"
                          >
                            Home 
                            <span
                              class="sr-only"
                            >
                              (current)
                            </span>
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/addevent"
                          >
                            Add Event
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/centers"
                          >
                            Centers
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/SignOut"
                          >
                            Sign Out 
                          </a>
                        </li>
                      </ul>
                    </div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <a
                    class="navbar-brand"
                    href="/"
                  >
                    EVENTS MANAGER
                  </a>,
                  "tag": 5,
                  "type": "a",
                  "updateQueue": null,
                },
                "stateNode": <button
                  aria-controls="navbarText"
                  aria-expanded="false"
                  aria-label="Toggle navigation"
                  class="navbar-toggler navbar-toggler-right"
                  data-target="#navbarText"
                  data-toggle="collapse"
                  type="button"
                >
                  <span
                    class="navbar-toggler-icon"
                  />
                </button>,
                "tag": 5,
                "type": "button",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <button
                    aria-controls="navbarText"
                    aria-expanded="false"
                    aria-label="Toggle navigation"
                    className="navbar-toggler navbar-toggler-right"
                    data-target="#navbarText"
                    data-toggle="collapse"
                    type="button"
                  >
                    <span
                      className="navbar-toggler-icon"
                    />
                  </button>,
                  <a
                    className="navbar-brand"
                    href="/"
                  >
                    EVENTS MANAGER
                  </a>,
                  <div
                    className="collapse navbar-collapse"
                    id="navbarText"
                  >
                    <ul
                      className="navbar-nav ml-auto"
                    >
                      <li
                        className="nav-item active"
                      >
                        <a
                          className="nav-link"
                          href="/"
                        >
                          Home 
                          <span
                            className="sr-only"
                          >
                            (current)
                          </span>
                        </a>
                      </li>
                      <li
                        className="nav-item"
                      >
                        <a
                          className="nav-link"
                          href="/addevent"
                        >
                          Add Event
                        </a>
                      </li>
                      <li
                        className="nav-item"
                      >
                        <a
                          className="nav-link"
                          href="/centers"
                        >
                          Centers
                        </a>
                      </li>
                      <li
                        className="nav-item"
                      >
                        <a
                          className="nav-link"
                          href="/SignOut"
                        >
                          Sign Out 
                        </a>
                      </li>
                    </ul>
                  </div>,
                ],
                "className": "navbar navbar-toggleable-md navbar-light bg-faded",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <nav
                class="navbar navbar-toggleable-md navbar-light bg-faded"
              >
                <button
                  aria-controls="navbarText"
                  aria-expanded="false"
                  aria-label="Toggle navigation"
                  class="navbar-toggler navbar-toggler-right"
                  data-target="#navbarText"
                  data-toggle="collapse"
                  type="button"
                >
                  <span
                    class="navbar-toggler-icon"
                  />
                </button>
                <a
                  class="navbar-brand"
                  href="/"
                >
                  EVENTS MANAGER
                </a>
                <div
                  class="collapse navbar-collapse"
                  id="navbarText"
                >
                  <ul
                    class="navbar-nav ml-auto"
                  >
                    <li
                      class="nav-item active"
                    >
                      <a
                        class="nav-link"
                        href="/"
                      >
                        Home 
                        <span
                          class="sr-only"
                        >
                          (current)
                        </span>
                      </a>
                    </li>
                    <li
                      class="nav-item"
                    >
                      <a
                        class="nav-link"
                        href="/addevent"
                      >
                        Add Event
                      </a>
                    </li>
                    <li
                      class="nav-item"
                    >
                      <a
                        class="nav-link"
                        href="/centers"
                      >
                        Centers
                      </a>
                    </li>
                    <li
                      class="nav-item"
                    >
                      <a
                        class="nav-link"
                        href="/SignOut"
                      >
                        Sign Out 
                      </a>
                    </li>
                  </ul>
                </div>
              </nav>,
              "tag": 5,
              "type": "nav",
              "updateQueue": null,
            },
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "page": "MyEvents",
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 24,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [],
                  "className": "row event-row",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="row event-row"
                />,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <div
                  className="row event-row"
                />,
                "className": "container events",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="container events"
              >
                <div
                  class="row event-row"
                />
              </div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "stateNode": NavBar {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "page": "MyEvents",
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <NavBar
                page="MyEvents"
              />,
              <div
                className="container events"
              >
                <div
                  className="row event-row"
                />
              </div>,
            ],
          },
          "memoizedState": null,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": [Circular],
          "sibling": null,
          "stateNode": <div>
            <nav
              class="navbar navbar-toggleable-md navbar-light bg-faded"
            >
              <button
                aria-controls="navbarText"
                aria-expanded="false"
                aria-label="Toggle navigation"
                class="navbar-toggler navbar-toggler-right"
                data-target="#navbarText"
                data-toggle="collapse"
                type="button"
              >
                <span
                  class="navbar-toggler-icon"
                />
              </button>
              <a
                class="navbar-brand"
                href="/"
              >
                EVENTS MANAGER
              </a>
              <div
                class="collapse navbar-collapse"
                id="navbarText"
              >
                <ul
                  class="navbar-nav ml-auto"
                >
                  <li
                    class="nav-item active"
                  >
                    <a
                      class="nav-link"
                      href="/"
                    >
                      Home 
                      <span
                        class="sr-only"
                      >
                        (current)
                      </span>
                    </a>
                  </li>
                  <li
                    class="nav-item"
                  >
                    <a
                      class="nav-link"
                      href="/addevent"
                    >
                      Add Event
                    </a>
                  </li>
                  <li
                    class="nav-item"
                  >
                    <a
                      class="nav-link"
                      href="/centers"
                    >
                      Centers
                    </a>
                  </li>
                  <li
                    class="nav-item"
                  >
                    <a
                      class="nav-link"
                      href="/SignOut"
                    >
                      Sign Out 
                    </a>
                  </li>
                </ul>
              </div>
            </nav>
            <div
              class="container events"
            >
              <div
                class="row event-row"
              />
            </div>
          </div>,
          "tag": 5,
          "type": "div",
          "updateQueue": null,
        },
        "effectTag": 5,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "internalContextTag": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {},
        "memoizedState": Object {
          "myEvents": Array [],
        },
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": FiberNode {
          "_debugID": 3,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
          },
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <nav
                      class="navbar navbar-toggleable-md navbar-light bg-faded"
                    >
                      <button
                        aria-controls="navbarText"
                        aria-expanded="false"
                        aria-label="Toggle navigation"
                        class="navbar-toggler navbar-toggler-right"
                        data-target="#navbarText"
                        data-toggle="collapse"
                        type="button"
                      >
                        <span
                          class="navbar-toggler-icon"
                        />
                      </button>
                      <a
                        class="navbar-brand"
                        href="/"
                      >
                        EVENTS MANAGER
                      </a>
                      <div
                        class="collapse navbar-collapse"
                        id="navbarText"
                      >
                        <ul
                          class="navbar-nav ml-auto"
                        >
                          <li
                            class="nav-item active"
                          >
                            <a
                              class="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                class="sr-only"
                              >
                                (current)
                              </span>
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/centers"
                            >
                              Centers
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/SignOut"
                            >
                              Sign Out 
                            </a>
                          </li>
                        </ul>
                      </div>
                    </nav>
                    <div
                      class="container events"
                    >
                      <div
                        class="row event-row"
                      />
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "hydrate": false,
                "isReadyForCommit": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "callbackList": null,
                "expirationTime": 1,
                "first": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "nextCallback": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                },
                "hasForceUpdate": false,
                "isInitialized": false,
                "isProcessing": false,
                "last": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "nextCallback": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                },
              },
            },
            "child": [Circular],
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
              />,
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                  <nav
                    class="navbar navbar-toggleable-md navbar-light bg-faded"
                  >
                    <button
                      aria-controls="navbarText"
                      aria-expanded="false"
                      aria-label="Toggle navigation"
                      class="navbar-toggler navbar-toggler-right"
                      data-target="#navbarText"
                      data-toggle="collapse"
                      type="button"
                    >
                      <span
                        class="navbar-toggler-icon"
                      />
                    </button>
                    <a
                      class="navbar-brand"
                      href="/"
                    >
                      EVENTS MANAGER
                    </a>
                    <div
                      class="collapse navbar-collapse"
                      id="navbarText"
                    >
                      <ul
                        class="navbar-nav ml-auto"
                      >
                        <li
                          class="nav-item active"
                        >
                          <a
                            class="nav-link"
                            href="/"
                          >
                            Home 
                            <span
                              class="sr-only"
                            >
                              (current)
                            </span>
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/addevent"
                          >
                            Add Event
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/centers"
                          >
                            Centers
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/SignOut"
                          >
                            Sign Out 
                          </a>
                        </li>
                      </ul>
                    </div>
                  </nav>
                  <div
                    class="container events"
                  >
                    <div
                      class="row event-row"
                    />
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "finishedWork": null,
              "hydrate": false,
              "isReadyForCommit": false,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "type": null,
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "props": Object {},
      "refs": Object {},
      "state": Object {
        "myEvents": Array [],
      },
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {},
    "ref": null,
    "rendered": Object {
      "instance": <div>
        <nav
          class="navbar navbar-toggleable-md navbar-light bg-faded"
        >
          <button
            aria-controls="navbarText"
            aria-expanded="false"
            aria-label="Toggle navigation"
            class="navbar-toggler navbar-toggler-right"
            data-target="#navbarText"
            data-toggle="collapse"
            type="button"
          >
            <span
              class="navbar-toggler-icon"
            />
          </button>
          <a
            class="navbar-brand"
            href="/"
          >
            EVENTS MANAGER
          </a>
          <div
            class="collapse navbar-collapse"
            id="navbarText"
          >
            <ul
              class="navbar-nav ml-auto"
            >
              <li
                class="nav-item active"
              >
                <a
                  class="nav-link"
                  href="/"
                >
                  Home 
                  <span
                    class="sr-only"
                  >
                    (current)
                  </span>
                </a>
              </li>
              <li
                class="nav-item"
              >
                <a
                  class="nav-link"
                  href="/addevent"
                >
                  Add Event
                </a>
              </li>
              <li
                class="nav-item"
              >
                <a
                  class="nav-link"
                  href="/centers"
                >
                  Centers
                </a>
              </li>
              <li
                class="nav-item"
              >
                <a
                  class="nav-link"
                  href="/SignOut"
                >
                  Sign Out 
                </a>
              </li>
            </ul>
          </div>
        </nav>
        <div
          class="container events"
        >
          <div
            class="row event-row"
          />
        </div>
      </div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <NavBar
            page="MyEvents"
          />,
          <div
            className="container events"
          >
            <div
              className="row event-row"
            />
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": NavBar {
            "_reactInternalFiber": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 3,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {},
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {},
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <nav
                              class="navbar navbar-toggleable-md navbar-light bg-faded"
                            >
                              <button
                                aria-controls="navbarText"
                                aria-expanded="false"
                                aria-label="Toggle navigation"
                                class="navbar-toggler navbar-toggler-right"
                                data-target="#navbarText"
                                data-toggle="collapse"
                                type="button"
                              >
                                <span
                                  class="navbar-toggler-icon"
                                />
                              </button>
                              <a
                                class="navbar-brand"
                                href="/"
                              >
                                EVENTS MANAGER
                              </a>
                              <div
                                class="collapse navbar-collapse"
                                id="navbarText"
                              >
                                <ul
                                  class="navbar-nav ml-auto"
                                >
                                  <li
                                    class="nav-item active"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/"
                                    >
                                      Home 
                                      <span
                                        class="sr-only"
                                      >
                                        (current)
                                      </span>
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/addevent"
                                    >
                                      Add Event
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/centers"
                                    >
                                      Centers
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/SignOut"
                                    >
                                      Sign Out 
                                    </a>
                                  </li>
                                </ul>
                              </div>
                            </nav>
                            <div
                              class="container events"
                            >
                              <div
                                class="row event-row"
                              />
                            </div>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
                            />,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
                            />,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <nav
                            class="navbar navbar-toggleable-md navbar-light bg-faded"
                          >
                            <button
                              aria-controls="navbarText"
                              aria-expanded="false"
                              aria-label="Toggle navigation"
                              class="navbar-toggler navbar-toggler-right"
                              data-target="#navbarText"
                              data-toggle="collapse"
                              type="button"
                            >
                              <span
                                class="navbar-toggler-icon"
                              />
                            </button>
                            <a
                              class="navbar-brand"
                              href="/"
                            >
                              EVENTS MANAGER
                            </a>
                            <div
                              class="collapse navbar-collapse"
                              id="navbarText"
                            >
                              <ul
                                class="navbar-nav ml-auto"
                              >
                                <li
                                  class="nav-item active"
                                >
                                  <a
                                    class="nav-link"
                                    href="/"
                                  >
                                    Home 
                                    <span
                                      class="sr-only"
                                    >
                                      (current)
                                    </span>
                                  </a>
                                </li>
                                <li
                                  class="nav-item"
                                >
                                  <a
                                    class="nav-link"
                                    href="/addevent"
                                  >
                                    Add Event
                                  </a>
                                </li>
                                <li
                                  class="nav-item"
                                >
                                  <a
                                    class="nav-link"
                                    href="/centers"
                                  >
                                    Centers
                                  </a>
                                </li>
                                <li
                                  class="nav-item"
                                >
                                  <a
                                    class="nav-link"
                                    href="/SignOut"
                                  >
                                    Sign Out 
                                  </a>
                                </li>
                              </ul>
                            </div>
                          </nav>
                          <div
                            class="container events"
                          >
                            <div
                              class="row event-row"
                            />
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {},
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <NavBar
                        page="MyEvents"
                      />,
                      <div
                        className="container events"
                      >
                        <div
                          className="row event-row"
                        />
                      </div>,
                    ],
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div>
                    <nav
                      class="navbar navbar-toggleable-md navbar-light bg-faded"
                    >
                      <button
                        aria-controls="navbarText"
                        aria-expanded="false"
                        aria-label="Toggle navigation"
                        class="navbar-toggler navbar-toggler-right"
                        data-target="#navbarText"
                        data-toggle="collapse"
                        type="button"
                      >
                        <span
                          class="navbar-toggler-icon"
                        />
                      </button>
                      <a
                        class="navbar-brand"
                        href="/"
                      >
                        EVENTS MANAGER
                      </a>
                      <div
                        class="collapse navbar-collapse"
                        id="navbarText"
                      >
                        <ul
                          class="navbar-nav ml-auto"
                        >
                          <li
                            class="nav-item active"
                          >
                            <a
                              class="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                class="sr-only"
                              >
                                (current)
                              </span>
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/centers"
                            >
                              Centers
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/SignOut"
                            >
                              Sign Out 
                            </a>
                          </li>
                        </ul>
                      </div>
                    </nav>
                    <div
                      class="container events"
                    >
                      <div
                        class="row event-row"
                      />
                    </div>
                  </div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 5,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {},
                "memoizedState": Object {
                  "myEvents": Array [],
                },
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 3,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {},
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {},
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <nav
                              class="navbar navbar-toggleable-md navbar-light bg-faded"
                            >
                              <button
                                aria-controls="navbarText"
                                aria-expanded="false"
                                aria-label="Toggle navigation"
                                class="navbar-toggler navbar-toggler-right"
                                data-target="#navbarText"
                                data-toggle="collapse"
                                type="button"
                              >
                                <span
                                  class="navbar-toggler-icon"
                                />
                              </button>
                              <a
                                class="navbar-brand"
                                href="/"
                              >
                                EVENTS MANAGER
                              </a>
                              <div
                                class="collapse navbar-collapse"
                                id="navbarText"
                              >
                                <ul
                                  class="navbar-nav ml-auto"
                                >
                                  <li
                                    class="nav-item active"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/"
                                    >
                                      Home 
                                      <span
                                        class="sr-only"
                                      >
                                        (current)
                                      </span>
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/addevent"
                                    >
                                      Add Event
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/centers"
                                    >
                                      Centers
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/SignOut"
                                    >
                                      Sign Out 
                                    </a>
                                  </li>
                                </ul>
                              </div>
                            </nav>
                            <div
                              class="container events"
                            >
                              <div
                                class="row event-row"
                              />
                            </div>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
                            />,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "nextCallback": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
                            />,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <nav
                            class="navbar navbar-toggleable-md navbar-light bg-faded"
                          >
                            <button
                              aria-controls="navbarText"
                              aria-expanded="false"
                              aria-label="Toggle navigation"
                              class="navbar-toggler navbar-toggler-right"
                              data-target="#navbarText"
                              data-toggle="collapse"
                              type="button"
                            >
                              <span
                                class="navbar-toggler-icon"
                              />
                            </button>
                            <a
                              class="navbar-brand"
                              href="/"
                            >
                              EVENTS MANAGER
                            </a>
                            <div
                              class="collapse navbar-collapse"
                              id="navbarText"
                            >
                              <ul
                                class="navbar-nav ml-auto"
                              >
                                <li
                                  class="nav-item active"
                                >
                                  <a
                                    class="nav-link"
                                    href="/"
                                  >
                                    Home 
                                    <span
                                      class="sr-only"
                                    >
                                      (current)
                                    </span>
                                  </a>
                                </li>
                                <li
                                  class="nav-item"
                                >
                                  <a
                                    class="nav-link"
                                    href="/addevent"
                                  >
                                    Add Event
                                  </a>
                                </li>
                                <li
                                  class="nav-item"
                                >
                                  <a
                                    class="nav-link"
                                    href="/centers"
                                  >
                                    Centers
                                  </a>
                                </li>
                                <li
                                  class="nav-item"
                                >
                                  <a
                                    class="nav-link"
                                    href="/SignOut"
                                  >
                                    Sign Out 
                                  </a>
                                </li>
                              </ul>
                            </div>
                          </nav>
                          <div
                            class="container events"
                          >
                            <div
                              class="row event-row"
                            />
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "hydrate": false,
                      "isReadyForCommit": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {},
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": MyEvents {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {},
                  "refs": Object {},
                  "state": Object {
                    "myEvents": Array [],
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 12,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "className": "navbar-toggler-icon",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <span
                      class="navbar-toggler-icon"
                    />,
                    "tag": 5,
                    "type": "span",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "aria-controls": "navbarText",
                    "aria-expanded": "false",
                    "aria-label": "Toggle navigation",
                    "children": <span
                      className="navbar-toggler-icon"
                    />,
                    "className": "navbar-toggler navbar-toggler-right",
                    "data-target": "#navbarText",
                    "data-toggle": "collapse",
                    "type": "button",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "EVENTS MANAGER",
                      "className": "navbar-brand",
                      "href": "/",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 13,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 14,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 18,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 19,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": "Home ",
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 20,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 1,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "(current)",
                                  "className": "sr-only",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <span
                                  class="sr-only"
                                >
                                  (current)
                                </span>,
                                "tag": 5,
                                "type": "span",
                                "updateQueue": null,
                              },
                              "stateNode": Home ,
                              "tag": 6,
                              "type": null,
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                "Home ",
                                <span
                                  className="sr-only"
                                >
                                  (current)
                                </span>,
                              ],
                              "className": "nav-link",
                              "href": "/",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <a
                              class="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                class="sr-only"
                              >
                                (current)
                              </span>
                            </a>,
                            "tag": 5,
                            "type": "a",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <a
                              className="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                className="sr-only"
                              >
                                (current)
                              </span>
                            </a>,
                            "className": "nav-item active",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 15,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 21,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Add Event",
                                "className": "nav-link",
                                "href": "/addevent",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <a
                                class="nav-link"
                                href="/addevent"
                              >
                                Add Event
                              </a>,
                              "tag": 5,
                              "type": "a",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 1,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <a
                                className="nav-link"
                                href="/addevent"
                              >
                                Add Event
                              </a>,
                              "className": "nav-item",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 16,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 22,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Centers",
                                  "className": "nav-link",
                                  "href": "/centers",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <a
                                  class="nav-link"
                                  href="/centers"
                                >
                                  Centers
                                </a>,
                                "tag": 5,
                                "type": "a",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 2,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <a
                                  className="nav-link"
                                  href="/centers"
                                >
                                  Centers
                                </a>,
                                "className": "nav-item",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 17,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 23,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "Sign Out ",
                                    "className": "nav-link",
                                    "href": "/SignOut",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": <a
                                    class="nav-link"
                                    href="/SignOut"
                                  >
                                    Sign Out 
                                  </a>,
                                  "tag": 5,
                                  "type": "a",
                                  "updateQueue": null,
                                },
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 3,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <a
                                    className="nav-link"
                                    href="/SignOut"
                                  >
                                    Sign Out 
                                  </a>,
                                  "className": "nav-item",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <li
                                  class="nav-item"
                                >
                                  <a
                                    class="nav-link"
                                    href="/SignOut"
                                  >
                                    Sign Out 
                                  </a>
                                </li>,
                                "tag": 5,
                                "type": "li",
                                "updateQueue": null,
                              },
                              "stateNode": <li
                                class="nav-item"
                              >
                                <a
                                  class="nav-link"
                                  href="/centers"
                                >
                                  Centers
                                </a>
                              </li>,
                              "tag": 5,
                              "type": "li",
                              "updateQueue": null,
                            },
                            "stateNode": <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/addevent"
                              >
                                Add Event
                              </a>
                            </li>,
                            "tag": 5,
                            "type": "li",
                            "updateQueue": null,
                          },
                          "stateNode": <li
                            class="nav-item active"
                          >
                            <a
                              class="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                class="sr-only"
                              >
                                (current)
                              </span>
                            </a>
                          </li>,
                          "tag": 5,
                          "type": "li",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <li
                              className="nav-item active"
                            >
                              <a
                                className="nav-link"
                                href="/"
                              >
                                Home 
                                <span
                                  className="sr-only"
                                >
                                  (current)
                                </span>
                              </a>
                            </li>,
                            <li
                              className="nav-item"
                            >
                              <a
                                className="nav-link"
                                href="/addevent"
                              >
                                Add Event
                              </a>
                            </li>,
                            <li
                              className="nav-item"
                            >
                              <a
                                className="nav-link"
                                href="/centers"
                              >
                                Centers
                              </a>
                            </li>,
                            <li
                              className="nav-item"
                            >
                              <a
                                className="nav-link"
                                href="/SignOut"
                              >
                                Sign Out 
                              </a>
                            </li>,
                          ],
                          "className": "navbar-nav ml-auto",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <ul
                          class="navbar-nav ml-auto"
                        >
                          <li
                            class="nav-item active"
                          >
                            <a
                              class="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                class="sr-only"
                              >
                                (current)
                              </span>
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/centers"
                            >
                              Centers
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/SignOut"
                            >
                              Sign Out 
                            </a>
                          </li>
                        </ul>,
                        "tag": 5,
                        "type": "ul",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <ul
                          className="navbar-nav ml-auto"
                        >
                          <li
                            className="nav-item active"
                          >
                            <a
                              className="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                className="sr-only"
                              >
                                (current)
                              </span>
                            </a>
                          </li>
                          <li
                            className="nav-item"
                          >
                            <a
                              className="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>
                          </li>
                          <li
                            className="nav-item"
                          >
                            <a
                              className="nav-link"
                              href="/centers"
                            >
                              Centers
                            </a>
                          </li>
                          <li
                            className="nav-item"
                          >
                            <a
                              className="nav-link"
                              href="/SignOut"
                            >
                              Sign Out 
                            </a>
                          </li>
                        </ul>,
                        "className": "collapse navbar-collapse",
                        "id": "navbarText",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="collapse navbar-collapse"
                        id="navbarText"
                      >
                        <ul
                          class="navbar-nav ml-auto"
                        >
                          <li
                            class="nav-item active"
                          >
                            <a
                              class="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                class="sr-only"
                              >
                                (current)
                              </span>
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/centers"
                            >
                              Centers
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/SignOut"
                            >
                              Sign Out 
                            </a>
                          </li>
                        </ul>
                      </div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <a
                      class="navbar-brand"
                      href="/"
                    >
                      EVENTS MANAGER
                    </a>,
                    "tag": 5,
                    "type": "a",
                    "updateQueue": null,
                  },
                  "stateNode": <button
                    aria-controls="navbarText"
                    aria-expanded="false"
                    aria-label="Toggle navigation"
                    class="navbar-toggler navbar-toggler-right"
                    data-target="#navbarText"
                    data-toggle="collapse"
                    type="button"
                  >
                    <span
                      class="navbar-toggler-icon"
                    />
                  </button>,
                  "tag": 5,
                  "type": "button",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <button
                      aria-controls="navbarText"
                      aria-expanded="false"
                      aria-label="Toggle navigation"
                      className="navbar-toggler navbar-toggler-right"
                      data-target="#navbarText"
                      data-toggle="collapse"
                      type="button"
                    >
                      <span
                        className="navbar-toggler-icon"
                      />
                    </button>,
                    <a
                      className="navbar-brand"
                      href="/"
                    >
                      EVENTS MANAGER
                    </a>,
                    <div
                      className="collapse navbar-collapse"
                      id="navbarText"
                    >
                      <ul
                        className="navbar-nav ml-auto"
                      >
                        <li
                          className="nav-item active"
                        >
                          <a
                            className="nav-link"
                            href="/"
                          >
                            Home 
                            <span
                              className="sr-only"
                            >
                              (current)
                            </span>
                          </a>
                        </li>
                        <li
                          className="nav-item"
                        >
                          <a
                            className="nav-link"
                            href="/addevent"
                          >
                            Add Event
                          </a>
                        </li>
                        <li
                          className="nav-item"
                        >
                          <a
                            className="nav-link"
                            href="/centers"
                          >
                            Centers
                          </a>
                        </li>
                        <li
                          className="nav-item"
                        >
                          <a
                            className="nav-link"
                            href="/SignOut"
                          >
                            Sign Out 
                          </a>
                        </li>
                      </ul>
                    </div>,
                  ],
                  "className": "navbar navbar-toggleable-md navbar-light bg-faded",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <nav
                  class="navbar navbar-toggleable-md navbar-light bg-faded"
                >
                  <button
                    aria-controls="navbarText"
                    aria-expanded="false"
                    aria-label="Toggle navigation"
                    class="navbar-toggler navbar-toggler-right"
                    data-target="#navbarText"
                    data-toggle="collapse"
                    type="button"
                  >
                    <span
                      class="navbar-toggler-icon"
                    />
                  </button>
                  <a
                    class="navbar-brand"
                    href="/"
                  >
                    EVENTS MANAGER
                  </a>
                  <div
                    class="collapse navbar-collapse"
                    id="navbarText"
                  >
                    <ul
                      class="navbar-nav ml-auto"
                    >
                      <li
                        class="nav-item active"
                      >
                        <a
                          class="nav-link"
                          href="/"
                        >
                          Home 
                          <span
                            class="sr-only"
                          >
                            (current)
                          </span>
                        </a>
                      </li>
                      <li
                        class="nav-item"
                      >
                        <a
                          class="nav-link"
                          href="/addevent"
                        >
                          Add Event
                        </a>
                      </li>
                      <li
                        class="nav-item"
                      >
                        <a
                          class="nav-link"
                          href="/centers"
                        >
                          Centers
                        </a>
                      </li>
                      <li
                        class="nav-item"
                      >
                        <a
                          class="nav-link"
                          href="/SignOut"
                        >
                          Sign Out 
                        </a>
                      </li>
                    </ul>
                  </div>
                </nav>,
                "tag": 5,
                "type": "nav",
                "updateQueue": null,
              },
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "page": "MyEvents",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": FiberNode {
                "_debugID": 5,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 4,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {},
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <nav
                                class="navbar navbar-toggleable-md navbar-light bg-faded"
                              >
                                <button
                                  aria-controls="navbarText"
                                  aria-expanded="false"
                                  aria-label="Toggle navigation"
                                  class="navbar-toggler navbar-toggler-right"
                                  data-target="#navbarText"
                                  data-toggle="collapse"
                                  type="button"
                                >
                                  <span
                                    class="navbar-toggler-icon"
                                  />
                                </button>
                                <a
                                  class="navbar-brand"
                                  href="/"
                                >
                                  EVENTS MANAGER
                                </a>
                                <div
                                  class="collapse navbar-collapse"
                                  id="navbarText"
                                >
                                  <ul
                                    class="navbar-nav ml-auto"
                                  >
                                    <li
                                      class="nav-item active"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/"
                                      >
                                        Home 
                                        <span
                                          class="sr-only"
                                        >
                                          (current)
                                        </span>
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/addevent"
                                      >
                                        Add Event
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/centers"
                                      >
                                        Centers
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/SignOut"
                                      >
                                        Sign Out 
                                      </a>
                                    </li>
                                  </ul>
                                </div>
                              </nav>
                              <div
                                class="container events"
                              >
                                <div
                                  class="row event-row"
                                />
                              </div>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
                              />,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
                              />,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={Object {}}
                        />,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <nav
                              class="navbar navbar-toggleable-md navbar-light bg-faded"
                            >
                              <button
                                aria-controls="navbarText"
                                aria-expanded="false"
                                aria-label="Toggle navigation"
                                class="navbar-toggler navbar-toggler-right"
                                data-target="#navbarText"
                                data-toggle="collapse"
                                type="button"
                              >
                                <span
                                  class="navbar-toggler-icon"
                                />
                              </button>
                              <a
                                class="navbar-brand"
                                href="/"
                              >
                                EVENTS MANAGER
                              </a>
                              <div
                                class="collapse navbar-collapse"
                                id="navbarText"
                              >
                                <ul
                                  class="navbar-nav ml-auto"
                                >
                                  <li
                                    class="nav-item active"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/"
                                    >
                                      Home 
                                      <span
                                        class="sr-only"
                                      >
                                        (current)
                                      </span>
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/addevent"
                                    >
                                      Add Event
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/centers"
                                    >
                                      Centers
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/SignOut"
                                    >
                                      Sign Out 
                                    </a>
                                  </li>
                                </ul>
                              </div>
                            </nav>
                            <div
                              class="container events"
                            >
                              <div
                                class="row event-row"
                              />
                            </div>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 5,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": Object {
                    "myEvents": Array [],
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {},
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <nav
                                class="navbar navbar-toggleable-md navbar-light bg-faded"
                              >
                                <button
                                  aria-controls="navbarText"
                                  aria-expanded="false"
                                  aria-label="Toggle navigation"
                                  class="navbar-toggler navbar-toggler-right"
                                  data-target="#navbarText"
                                  data-toggle="collapse"
                                  type="button"
                                >
                                  <span
                                    class="navbar-toggler-icon"
                                  />
                                </button>
                                <a
                                  class="navbar-brand"
                                  href="/"
                                >
                                  EVENTS MANAGER
                                </a>
                                <div
                                  class="collapse navbar-collapse"
                                  id="navbarText"
                                >
                                  <ul
                                    class="navbar-nav ml-auto"
                                  >
                                    <li
                                      class="nav-item active"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/"
                                      >
                                        Home 
                                        <span
                                          class="sr-only"
                                        >
                                          (current)
                                        </span>
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/addevent"
                                      >
                                        Add Event
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/centers"
                                      >
                                        Centers
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/SignOut"
                                      >
                                        Sign Out 
                                      </a>
                                    </li>
                                  </ul>
                                </div>
                              </nav>
                              <div
                                class="container events"
                              >
                                <div
                                  class="row event-row"
                                />
                              </div>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
                              />,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
                              />,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={Object {}}
                        />,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <nav
                              class="navbar navbar-toggleable-md navbar-light bg-faded"
                            >
                              <button
                                aria-controls="navbarText"
                                aria-expanded="false"
                                aria-label="Toggle navigation"
                                class="navbar-toggler navbar-toggler-right"
                                data-target="#navbarText"
                                data-toggle="collapse"
                                type="button"
                              >
                                <span
                                  class="navbar-toggler-icon"
                                />
                              </button>
                              <a
                                class="navbar-brand"
                                href="/"
                              >
                                EVENTS MANAGER
                              </a>
                              <div
                                class="collapse navbar-collapse"
                                id="navbarText"
                              >
                                <ul
                                  class="navbar-nav ml-auto"
                                >
                                  <li
                                    class="nav-item active"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/"
                                    >
                                      Home 
                                      <span
                                        class="sr-only"
                                      >
                                        (current)
                                      </span>
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/addevent"
                                    >
                                      Add Event
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/centers"
                                    >
                                      Centers
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/SignOut"
                                    >
                                      Sign Out 
                                    </a>
                                  </li>
                                </ul>
                              </div>
                            </nav>
                            <div
                              class="container events"
                            >
                              <div
                                class="row event-row"
                              />
                            </div>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": MyEvents {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {},
                    "refs": Object {},
                    "state": Object {
                      "myEvents": Array [],
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <NavBar
                      page="MyEvents"
                    />,
                    <div
                      className="container events"
                    >
                      <div
                        className="row event-row"
                      />
                    </div>,
                  ],
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 4,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {},
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <nav
                                class="navbar navbar-toggleable-md navbar-light bg-faded"
                              >
                                <button
                                  aria-controls="navbarText"
                                  aria-expanded="false"
                                  aria-label="Toggle navigation"
                                  class="navbar-toggler navbar-toggler-right"
                                  data-target="#navbarText"
                                  data-toggle="collapse"
                                  type="button"
                                >
                                  <span
                                    class="navbar-toggler-icon"
                                  />
                                </button>
                                <a
                                  class="navbar-brand"
                                  href="/"
                                >
                                  EVENTS MANAGER
                                </a>
                                <div
                                  class="collapse navbar-collapse"
                                  id="navbarText"
                                >
                                  <ul
                                    class="navbar-nav ml-auto"
                                  >
                                    <li
                                      class="nav-item active"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/"
                                      >
                                        Home 
                                        <span
                                          class="sr-only"
                                        >
                                          (current)
                                        </span>
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/addevent"
                                      >
                                        Add Event
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/centers"
                                      >
                                        Centers
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/SignOut"
                                      >
                                        Sign Out 
                                      </a>
                                    </li>
                                  </ul>
                                </div>
                              </nav>
                              <div
                                class="container events"
                              >
                                <div
                                  class="row event-row"
                                />
                              </div>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
                              />,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
                              />,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={Object {}}
                        />,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <nav
                              class="navbar navbar-toggleable-md navbar-light bg-faded"
                            >
                              <button
                                aria-controls="navbarText"
                                aria-expanded="false"
                                aria-label="Toggle navigation"
                                class="navbar-toggler navbar-toggler-right"
                                data-target="#navbarText"
                                data-toggle="collapse"
                                type="button"
                              >
                                <span
                                  class="navbar-toggler-icon"
                                />
                              </button>
                              <a
                                class="navbar-brand"
                                href="/"
                              >
                                EVENTS MANAGER
                              </a>
                              <div
                                class="collapse navbar-collapse"
                                id="navbarText"
                              >
                                <ul
                                  class="navbar-nav ml-auto"
                                >
                                  <li
                                    class="nav-item active"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/"
                                    >
                                      Home 
                                      <span
                                        class="sr-only"
                                      >
                                        (current)
                                      </span>
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/addevent"
                                    >
                                      Add Event
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/centers"
                                    >
                                      Centers
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/SignOut"
                                    >
                                      Sign Out 
                                    </a>
                                  </li>
                                </ul>
                              </div>
                            </nav>
                            <div
                              class="container events"
                            >
                              <div
                                class="row event-row"
                              />
                            </div>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 5,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": Object {
                    "myEvents": Array [],
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {},
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <nav
                                class="navbar navbar-toggleable-md navbar-light bg-faded"
                              >
                                <button
                                  aria-controls="navbarText"
                                  aria-expanded="false"
                                  aria-label="Toggle navigation"
                                  class="navbar-toggler navbar-toggler-right"
                                  data-target="#navbarText"
                                  data-toggle="collapse"
                                  type="button"
                                >
                                  <span
                                    class="navbar-toggler-icon"
                                  />
                                </button>
                                <a
                                  class="navbar-brand"
                                  href="/"
                                >
                                  EVENTS MANAGER
                                </a>
                                <div
                                  class="collapse navbar-collapse"
                                  id="navbarText"
                                >
                                  <ul
                                    class="navbar-nav ml-auto"
                                  >
                                    <li
                                      class="nav-item active"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/"
                                      >
                                        Home 
                                        <span
                                          class="sr-only"
                                        >
                                          (current)
                                        </span>
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/addevent"
                                      >
                                        Add Event
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/centers"
                                      >
                                        Centers
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/SignOut"
                                      >
                                        Sign Out 
                                      </a>
                                    </li>
                                  </ul>
                                </div>
                              </nav>
                              <div
                                class="container events"
                              >
                                <div
                                  class="row event-row"
                                />
                              </div>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
                              />,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
                              />,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={Object {}}
                        />,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <nav
                              class="navbar navbar-toggleable-md navbar-light bg-faded"
                            >
                              <button
                                aria-controls="navbarText"
                                aria-expanded="false"
                                aria-label="Toggle navigation"
                                class="navbar-toggler navbar-toggler-right"
                                data-target="#navbarText"
                                data-toggle="collapse"
                                type="button"
                              >
                                <span
                                  class="navbar-toggler-icon"
                                />
                              </button>
                              <a
                                class="navbar-brand"
                                href="/"
                              >
                                EVENTS MANAGER
                              </a>
                              <div
                                class="collapse navbar-collapse"
                                id="navbarText"
                              >
                                <ul
                                  class="navbar-nav ml-auto"
                                >
                                  <li
                                    class="nav-item active"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/"
                                    >
                                      Home 
                                      <span
                                        class="sr-only"
                                      >
                                        (current)
                                      </span>
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/addevent"
                                    >
                                      Add Event
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/centers"
                                    >
                                      Centers
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/SignOut"
                                    >
                                      Sign Out 
                                    </a>
                                  </li>
                                </ul>
                              </div>
                            </nav>
                            <div
                              class="container events"
                            >
                              <div
                                class="row event-row"
                              />
                            </div>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": MyEvents {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {},
                    "refs": Object {},
                    "state": Object {
                      "myEvents": Array [],
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": <div>
                  <nav
                    class="navbar navbar-toggleable-md navbar-light bg-faded"
                  >
                    <button
                      aria-controls="navbarText"
                      aria-expanded="false"
                      aria-label="Toggle navigation"
                      class="navbar-toggler navbar-toggler-right"
                      data-target="#navbarText"
                      data-toggle="collapse"
                      type="button"
                    >
                      <span
                        class="navbar-toggler-icon"
                      />
                    </button>
                    <a
                      class="navbar-brand"
                      href="/"
                    >
                      EVENTS MANAGER
                    </a>
                    <div
                      class="collapse navbar-collapse"
                      id="navbarText"
                    >
                      <ul
                        class="navbar-nav ml-auto"
                      >
                        <li
                          class="nav-item active"
                        >
                          <a
                            class="nav-link"
                            href="/"
                          >
                            Home 
                            <span
                              class="sr-only"
                            >
                              (current)
                            </span>
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/addevent"
                          >
                            Add Event
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/centers"
                          >
                            Centers
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/SignOut"
                          >
                            Sign Out 
                          </a>
                        </li>
                      </ul>
                    </div>
                  </nav>
                  <div
                    class="container events"
                  >
                    <div
                      class="row event-row"
                    />
                  </div>
                </div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "sibling": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 4,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {},
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <nav
                                class="navbar navbar-toggleable-md navbar-light bg-faded"
                              >
                                <button
                                  aria-controls="navbarText"
                                  aria-expanded="false"
                                  aria-label="Toggle navigation"
                                  class="navbar-toggler navbar-toggler-right"
                                  data-target="#navbarText"
                                  data-toggle="collapse"
                                  type="button"
                                >
                                  <span
                                    class="navbar-toggler-icon"
                                  />
                                </button>
                                <a
                                  class="navbar-brand"
                                  href="/"
                                >
                                  EVENTS MANAGER
                                </a>
                                <div
                                  class="collapse navbar-collapse"
                                  id="navbarText"
                                >
                                  <ul
                                    class="navbar-nav ml-auto"
                                  >
                                    <li
                                      class="nav-item active"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/"
                                      >
                                        Home 
                                        <span
                                          class="sr-only"
                                        >
                                          (current)
                                        </span>
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/addevent"
                                      >
                                        Add Event
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/centers"
                                      >
                                        Centers
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/SignOut"
                                      >
                                        Sign Out 
                                      </a>
                                    </li>
                                  </ul>
                                </div>
                              </nav>
                              <div
                                class="container events"
                              >
                                <div
                                  class="row event-row"
                                />
                              </div>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
                              />,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
                              />,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={Object {}}
                        />,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <nav
                              class="navbar navbar-toggleable-md navbar-light bg-faded"
                            >
                              <button
                                aria-controls="navbarText"
                                aria-expanded="false"
                                aria-label="Toggle navigation"
                                class="navbar-toggler navbar-toggler-right"
                                data-target="#navbarText"
                                data-toggle="collapse"
                                type="button"
                              >
                                <span
                                  class="navbar-toggler-icon"
                                />
                              </button>
                              <a
                                class="navbar-brand"
                                href="/"
                              >
                                EVENTS MANAGER
                              </a>
                              <div
                                class="collapse navbar-collapse"
                                id="navbarText"
                              >
                                <ul
                                  class="navbar-nav ml-auto"
                                >
                                  <li
                                    class="nav-item active"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/"
                                    >
                                      Home 
                                      <span
                                        class="sr-only"
                                      >
                                        (current)
                                      </span>
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/addevent"
                                    >
                                      Add Event
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/centers"
                                    >
                                      Centers
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/SignOut"
                                    >
                                      Sign Out 
                                    </a>
                                  </li>
                                </ul>
                              </div>
                            </nav>
                            <div
                              class="container events"
                            >
                              <div
                                class="row event-row"
                              />
                            </div>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <NavBar
                          page="MyEvents"
                        />,
                        <div
                          className="container events"
                        >
                          <div
                            className="row event-row"
                          />
                        </div>,
                      ],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div>
                      <nav
                        class="navbar navbar-toggleable-md navbar-light bg-faded"
                      >
                        <button
                          aria-controls="navbarText"
                          aria-expanded="false"
                          aria-label="Toggle navigation"
                          class="navbar-toggler navbar-toggler-right"
                          data-target="#navbarText"
                          data-toggle="collapse"
                          type="button"
                        >
                          <span
                            class="navbar-toggler-icon"
                          />
                        </button>
                        <a
                          class="navbar-brand"
                          href="/"
                        >
                          EVENTS MANAGER
                        </a>
                        <div
                          class="collapse navbar-collapse"
                          id="navbarText"
                        >
                          <ul
                            class="navbar-nav ml-auto"
                          >
                            <li
                              class="nav-item active"
                            >
                              <a
                                class="nav-link"
                                href="/"
                              >
                                Home 
                                <span
                                  class="sr-only"
                                >
                                  (current)
                                </span>
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/addevent"
                              >
                                Add Event
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/centers"
                              >
                                Centers
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/SignOut"
                              >
                                Sign Out 
                              </a>
                            </li>
                          </ul>
                        </div>
                      </nav>
                      <div
                        class="container events"
                      >
                        <div
                          class="row event-row"
                        />
                      </div>
                    </div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 5,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": Object {
                    "myEvents": Array [],
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {},
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <nav
                                class="navbar navbar-toggleable-md navbar-light bg-faded"
                              >
                                <button
                                  aria-controls="navbarText"
                                  aria-expanded="false"
                                  aria-label="Toggle navigation"
                                  class="navbar-toggler navbar-toggler-right"
                                  data-target="#navbarText"
                                  data-toggle="collapse"
                                  type="button"
                                >
                                  <span
                                    class="navbar-toggler-icon"
                                  />
                                </button>
                                <a
                                  class="navbar-brand"
                                  href="/"
                                >
                                  EVENTS MANAGER
                                </a>
                                <div
                                  class="collapse navbar-collapse"
                                  id="navbarText"
                                >
                                  <ul
                                    class="navbar-nav ml-auto"
                                  >
                                    <li
                                      class="nav-item active"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/"
                                      >
                                        Home 
                                        <span
                                          class="sr-only"
                                        >
                                          (current)
                                        </span>
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/addevent"
                                      >
                                        Add Event
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/centers"
                                      >
                                        Centers
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/SignOut"
                                      >
                                        Sign Out 
                                      </a>
                                    </li>
                                  </ul>
                                </div>
                              </nav>
                              <div
                                class="container events"
                              >
                                <div
                                  class="row event-row"
                                />
                              </div>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
                              />,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
                              />,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={Object {}}
                        />,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <nav
                              class="navbar navbar-toggleable-md navbar-light bg-faded"
                            >
                              <button
                                aria-controls="navbarText"
                                aria-expanded="false"
                                aria-label="Toggle navigation"
                                class="navbar-toggler navbar-toggler-right"
                                data-target="#navbarText"
                                data-toggle="collapse"
                                type="button"
                              >
                                <span
                                  class="navbar-toggler-icon"
                                />
                              </button>
                              <a
                                class="navbar-brand"
                                href="/"
                              >
                                EVENTS MANAGER
                              </a>
                              <div
                                class="collapse navbar-collapse"
                                id="navbarText"
                              >
                                <ul
                                  class="navbar-nav ml-auto"
                                >
                                  <li
                                    class="nav-item active"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/"
                                    >
                                      Home 
                                      <span
                                        class="sr-only"
                                      >
                                        (current)
                                      </span>
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/addevent"
                                    >
                                      Add Event
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/centers"
                                    >
                                      Centers
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/SignOut"
                                    >
                                      Sign Out 
                                    </a>
                                  </li>
                                </ul>
                              </div>
                            </nav>
                            <div
                              class="container events"
                            >
                              <div
                                class="row event-row"
                              />
                            </div>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": MyEvents {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {},
                    "refs": Object {},
                    "state": Object {
                      "myEvents": Array [],
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 24,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div>
                                <nav
                                  class="navbar navbar-toggleable-md navbar-light bg-faded"
                                >
                                  <button
                                    aria-controls="navbarText"
                                    aria-expanded="false"
                                    aria-label="Toggle navigation"
                                    class="navbar-toggler navbar-toggler-right"
                                    data-target="#navbarText"
                                    data-toggle="collapse"
                                    type="button"
                                  >
                                    <span
                                      class="navbar-toggler-icon"
                                    />
                                  </button>
                                  <a
                                    class="navbar-brand"
                                    href="/"
                                  >
                                    EVENTS MANAGER
                                  </a>
                                  <div
                                    class="collapse navbar-collapse"
                                    id="navbarText"
                                  >
                                    <ul
                                      class="navbar-nav ml-auto"
                                    >
                                      <li
                                        class="nav-item active"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/"
                                        >
                                          Home 
                                          <span
                                            class="sr-only"
                                          >
                                            (current)
                                          </span>
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/addevent"
                                        >
                                          Add Event
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/centers"
                                        >
                                          Centers
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/SignOut"
                                        >
                                          Sign Out 
                                        </a>
                                      </li>
                                    </ul>
                                  </div>
                                </nav>
                                <div
                                  class="container events"
                                >
                                  <div
                                    class="row event-row"
                                  />
                                </div>
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
                          />,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <nav
                                class="navbar navbar-toggleable-md navbar-light bg-faded"
                              >
                                <button
                                  aria-controls="navbarText"
                                  aria-expanded="false"
                                  aria-label="Toggle navigation"
                                  class="navbar-toggler navbar-toggler-right"
                                  data-target="#navbarText"
                                  data-toggle="collapse"
                                  type="button"
                                >
                                  <span
                                    class="navbar-toggler-icon"
                                  />
                                </button>
                                <a
                                  class="navbar-brand"
                                  href="/"
                                >
                                  EVENTS MANAGER
                                </a>
                                <div
                                  class="collapse navbar-collapse"
                                  id="navbarText"
                                >
                                  <ul
                                    class="navbar-nav ml-auto"
                                  >
                                    <li
                                      class="nav-item active"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/"
                                      >
                                        Home 
                                        <span
                                          class="sr-only"
                                        >
                                          (current)
                                        </span>
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/addevent"
                                      >
                                        Add Event
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/centers"
                                      >
                                        Centers
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/SignOut"
                                      >
                                        Sign Out 
                                      </a>
                                    </li>
                                  </ul>
                                </div>
                              </nav>
                              <div
                                class="container events"
                              >
                                <div
                                  class="row event-row"
                                />
                              </div>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <NavBar
                            page="MyEvents"
                          />,
                          <div
                            className="container events"
                          >
                            <div
                              className="row event-row"
                            />
                          </div>,
                        ],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div>
                        <nav
                          class="navbar navbar-toggleable-md navbar-light bg-faded"
                        >
                          <button
                            aria-controls="navbarText"
                            aria-expanded="false"
                            aria-label="Toggle navigation"
                            class="navbar-toggler navbar-toggler-right"
                            data-target="#navbarText"
                            data-toggle="collapse"
                            type="button"
                          >
                            <span
                              class="navbar-toggler-icon"
                            />
                          </button>
                          <a
                            class="navbar-brand"
                            href="/"
                          >
                            EVENTS MANAGER
                          </a>
                          <div
                            class="collapse navbar-collapse"
                            id="navbarText"
                          >
                            <ul
                              class="navbar-nav ml-auto"
                            >
                              <li
                                class="nav-item active"
                              >
                                <a
                                  class="nav-link"
                                  href="/"
                                >
                                  Home 
                                  <span
                                    class="sr-only"
                                  >
                                    (current)
                                  </span>
                                </a>
                              </li>
                              <li
                                class="nav-item"
                              >
                                <a
                                  class="nav-link"
                                  href="/addevent"
                                >
                                  Add Event
                                </a>
                              </li>
                              <li
                                class="nav-item"
                              >
                                <a
                                  class="nav-link"
                                  href="/centers"
                                >
                                  Centers
                                </a>
                              </li>
                              <li
                                class="nav-item"
                              >
                                <a
                                  class="nav-link"
                                  href="/SignOut"
                                >
                                  Sign Out 
                                </a>
                              </li>
                            </ul>
                          </div>
                        </nav>
                        <div
                          class="container events"
                        >
                          <div
                            class="row event-row"
                          />
                        </div>
                      </div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 5,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": Object {
                      "myEvents": Array [],
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div>
                                <nav
                                  class="navbar navbar-toggleable-md navbar-light bg-faded"
                                >
                                  <button
                                    aria-controls="navbarText"
                                    aria-expanded="false"
                                    aria-label="Toggle navigation"
                                    class="navbar-toggler navbar-toggler-right"
                                    data-target="#navbarText"
                                    data-toggle="collapse"
                                    type="button"
                                  >
                                    <span
                                      class="navbar-toggler-icon"
                                    />
                                  </button>
                                  <a
                                    class="navbar-brand"
                                    href="/"
                                  >
                                    EVENTS MANAGER
                                  </a>
                                  <div
                                    class="collapse navbar-collapse"
                                    id="navbarText"
                                  >
                                    <ul
                                      class="navbar-nav ml-auto"
                                    >
                                      <li
                                        class="nav-item active"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/"
                                        >
                                          Home 
                                          <span
                                            class="sr-only"
                                          >
                                            (current)
                                          </span>
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/addevent"
                                        >
                                          Add Event
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/centers"
                                        >
                                          Centers
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/SignOut"
                                        >
                                          Sign Out 
                                        </a>
                                      </li>
                                    </ul>
                                  </div>
                                </nav>
                                <div
                                  class="container events"
                                >
                                  <div
                                    class="row event-row"
                                  />
                                </div>
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
                          />,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <nav
                                class="navbar navbar-toggleable-md navbar-light bg-faded"
                              >
                                <button
                                  aria-controls="navbarText"
                                  aria-expanded="false"
                                  aria-label="Toggle navigation"
                                  class="navbar-toggler navbar-toggler-right"
                                  data-target="#navbarText"
                                  data-toggle="collapse"
                                  type="button"
                                >
                                  <span
                                    class="navbar-toggler-icon"
                                  />
                                </button>
                                <a
                                  class="navbar-brand"
                                  href="/"
                                >
                                  EVENTS MANAGER
                                </a>
                                <div
                                  class="collapse navbar-collapse"
                                  id="navbarText"
                                >
                                  <ul
                                    class="navbar-nav ml-auto"
                                  >
                                    <li
                                      class="nav-item active"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/"
                                      >
                                        Home 
                                        <span
                                          class="sr-only"
                                        >
                                          (current)
                                        </span>
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/addevent"
                                      >
                                        Add Event
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/centers"
                                      >
                                        Centers
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/SignOut"
                                      >
                                        Sign Out 
                                      </a>
                                    </li>
                                  </ul>
                                </div>
                              </nav>
                              <div
                                class="container events"
                              >
                                <div
                                  class="row event-row"
                                />
                              </div>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": MyEvents {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {},
                      "refs": Object {},
                      "state": Object {
                        "myEvents": Array [],
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [],
                    "className": "row event-row",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="row event-row"
                  />,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <div
                    className="row event-row"
                  />,
                  "className": "container events",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div>
                                <nav
                                  class="navbar navbar-toggleable-md navbar-light bg-faded"
                                >
                                  <button
                                    aria-controls="navbarText"
                                    aria-expanded="false"
                                    aria-label="Toggle navigation"
                                    class="navbar-toggler navbar-toggler-right"
                                    data-target="#navbarText"
                                    data-toggle="collapse"
                                    type="button"
                                  >
                                    <span
                                      class="navbar-toggler-icon"
                                    />
                                  </button>
                                  <a
                                    class="navbar-brand"
                                    href="/"
                                  >
                                    EVENTS MANAGER
                                  </a>
                                  <div
                                    class="collapse navbar-collapse"
                                    id="navbarText"
                                  >
                                    <ul
                                      class="navbar-nav ml-auto"
                                    >
                                      <li
                                        class="nav-item active"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/"
                                        >
                                          Home 
                                          <span
                                            class="sr-only"
                                          >
                                            (current)
                                          </span>
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/addevent"
                                        >
                                          Add Event
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/centers"
                                        >
                                          Centers
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/SignOut"
                                        >
                                          Sign Out 
                                        </a>
                                      </li>
                                    </ul>
                                  </div>
                                </nav>
                                <div
                                  class="container events"
                                >
                                  <div
                                    class="row event-row"
                                  />
                                </div>
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
                          />,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <nav
                                class="navbar navbar-toggleable-md navbar-light bg-faded"
                              >
                                <button
                                  aria-controls="navbarText"
                                  aria-expanded="false"
                                  aria-label="Toggle navigation"
                                  class="navbar-toggler navbar-toggler-right"
                                  data-target="#navbarText"
                                  data-toggle="collapse"
                                  type="button"
                                >
                                  <span
                                    class="navbar-toggler-icon"
                                  />
                                </button>
                                <a
                                  class="navbar-brand"
                                  href="/"
                                >
                                  EVENTS MANAGER
                                </a>
                                <div
                                  class="collapse navbar-collapse"
                                  id="navbarText"
                                >
                                  <ul
                                    class="navbar-nav ml-auto"
                                  >
                                    <li
                                      class="nav-item active"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/"
                                      >
                                        Home 
                                        <span
                                          class="sr-only"
                                        >
                                          (current)
                                        </span>
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/addevent"
                                      >
                                        Add Event
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/centers"
                                      >
                                        Centers
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/SignOut"
                                      >
                                        Sign Out 
                                      </a>
                                    </li>
                                  </ul>
                                </div>
                              </nav>
                              <div
                                class="container events"
                              >
                                <div
                                  class="row event-row"
                                />
                              </div>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 5,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": Object {
                      "myEvents": Array [],
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div>
                                <nav
                                  class="navbar navbar-toggleable-md navbar-light bg-faded"
                                >
                                  <button
                                    aria-controls="navbarText"
                                    aria-expanded="false"
                                    aria-label="Toggle navigation"
                                    class="navbar-toggler navbar-toggler-right"
                                    data-target="#navbarText"
                                    data-toggle="collapse"
                                    type="button"
                                  >
                                    <span
                                      class="navbar-toggler-icon"
                                    />
                                  </button>
                                  <a
                                    class="navbar-brand"
                                    href="/"
                                  >
                                    EVENTS MANAGER
                                  </a>
                                  <div
                                    class="collapse navbar-collapse"
                                    id="navbarText"
                                  >
                                    <ul
                                      class="navbar-nav ml-auto"
                                    >
                                      <li
                                        class="nav-item active"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/"
                                        >
                                          Home 
                                          <span
                                            class="sr-only"
                                          >
                                            (current)
                                          </span>
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/addevent"
                                        >
                                          Add Event
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/centers"
                                        >
                                          Centers
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/SignOut"
                                        >
                                          Sign Out 
                                        </a>
                                      </li>
                                    </ul>
                                  </div>
                                </nav>
                                <div
                                  class="container events"
                                >
                                  <div
                                    class="row event-row"
                                  />
                                </div>
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
                          />,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <nav
                                class="navbar navbar-toggleable-md navbar-light bg-faded"
                              >
                                <button
                                  aria-controls="navbarText"
                                  aria-expanded="false"
                                  aria-label="Toggle navigation"
                                  class="navbar-toggler navbar-toggler-right"
                                  data-target="#navbarText"
                                  data-toggle="collapse"
                                  type="button"
                                >
                                  <span
                                    class="navbar-toggler-icon"
                                  />
                                </button>
                                <a
                                  class="navbar-brand"
                                  href="/"
                                >
                                  EVENTS MANAGER
                                </a>
                                <div
                                  class="collapse navbar-collapse"
                                  id="navbarText"
                                >
                                  <ul
                                    class="navbar-nav ml-auto"
                                  >
                                    <li
                                      class="nav-item active"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/"
                                      >
                                        Home 
                                        <span
                                          class="sr-only"
                                        >
                                          (current)
                                        </span>
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/addevent"
                                      >
                                        Add Event
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/centers"
                                      >
                                        Centers
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/SignOut"
                                      >
                                        Sign Out 
                                      </a>
                                    </li>
                                  </ul>
                                </div>
                              </nav>
                              <div
                                class="container events"
                              >
                                <div
                                  class="row event-row"
                                />
                              </div>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": MyEvents {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {},
                      "refs": Object {},
                      "state": Object {
                        "myEvents": Array [],
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <NavBar
                        page="MyEvents"
                      />,
                      <div
                        className="container events"
                      >
                        <div
                          className="row event-row"
                        />
                      </div>,
                    ],
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div>
                                <nav
                                  class="navbar navbar-toggleable-md navbar-light bg-faded"
                                >
                                  <button
                                    aria-controls="navbarText"
                                    aria-expanded="false"
                                    aria-label="Toggle navigation"
                                    class="navbar-toggler navbar-toggler-right"
                                    data-target="#navbarText"
                                    data-toggle="collapse"
                                    type="button"
                                  >
                                    <span
                                      class="navbar-toggler-icon"
                                    />
                                  </button>
                                  <a
                                    class="navbar-brand"
                                    href="/"
                                  >
                                    EVENTS MANAGER
                                  </a>
                                  <div
                                    class="collapse navbar-collapse"
                                    id="navbarText"
                                  >
                                    <ul
                                      class="navbar-nav ml-auto"
                                    >
                                      <li
                                        class="nav-item active"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/"
                                        >
                                          Home 
                                          <span
                                            class="sr-only"
                                          >
                                            (current)
                                          </span>
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/addevent"
                                        >
                                          Add Event
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/centers"
                                        >
                                          Centers
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/SignOut"
                                        >
                                          Sign Out 
                                        </a>
                                      </li>
                                    </ul>
                                  </div>
                                </nav>
                                <div
                                  class="container events"
                                >
                                  <div
                                    class="row event-row"
                                  />
                                </div>
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
                          />,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <nav
                                class="navbar navbar-toggleable-md navbar-light bg-faded"
                              >
                                <button
                                  aria-controls="navbarText"
                                  aria-expanded="false"
                                  aria-label="Toggle navigation"
                                  class="navbar-toggler navbar-toggler-right"
                                  data-target="#navbarText"
                                  data-toggle="collapse"
                                  type="button"
                                >
                                  <span
                                    class="navbar-toggler-icon"
                                  />
                                </button>
                                <a
                                  class="navbar-brand"
                                  href="/"
                                >
                                  EVENTS MANAGER
                                </a>
                                <div
                                  class="collapse navbar-collapse"
                                  id="navbarText"
                                >
                                  <ul
                                    class="navbar-nav ml-auto"
                                  >
                                    <li
                                      class="nav-item active"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/"
                                      >
                                        Home 
                                        <span
                                          class="sr-only"
                                        >
                                          (current)
                                        </span>
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/addevent"
                                      >
                                        Add Event
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/centers"
                                      >
                                        Centers
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/SignOut"
                                      >
                                        Sign Out 
                                      </a>
                                    </li>
                                  </ul>
                                </div>
                              </nav>
                              <div
                                class="container events"
                              >
                                <div
                                  class="row event-row"
                                />
                              </div>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 5,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": Object {
                      "myEvents": Array [],
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div>
                                <nav
                                  class="navbar navbar-toggleable-md navbar-light bg-faded"
                                >
                                  <button
                                    aria-controls="navbarText"
                                    aria-expanded="false"
                                    aria-label="Toggle navigation"
                                    class="navbar-toggler navbar-toggler-right"
                                    data-target="#navbarText"
                                    data-toggle="collapse"
                                    type="button"
                                  >
                                    <span
                                      class="navbar-toggler-icon"
                                    />
                                  </button>
                                  <a
                                    class="navbar-brand"
                                    href="/"
                                  >
                                    EVENTS MANAGER
                                  </a>
                                  <div
                                    class="collapse navbar-collapse"
                                    id="navbarText"
                                  >
                                    <ul
                                      class="navbar-nav ml-auto"
                                    >
                                      <li
                                        class="nav-item active"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/"
                                        >
                                          Home 
                                          <span
                                            class="sr-only"
                                          >
                                            (current)
                                          </span>
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/addevent"
                                        >
                                          Add Event
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/centers"
                                        >
                                          Centers
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/SignOut"
                                        >
                                          Sign Out 
                                        </a>
                                      </li>
                                    </ul>
                                  </div>
                                </nav>
                                <div
                                  class="container events"
                                >
                                  <div
                                    class="row event-row"
                                  />
                                </div>
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
                          />,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <nav
                                class="navbar navbar-toggleable-md navbar-light bg-faded"
                              >
                                <button
                                  aria-controls="navbarText"
                                  aria-expanded="false"
                                  aria-label="Toggle navigation"
                                  class="navbar-toggler navbar-toggler-right"
                                  data-target="#navbarText"
                                  data-toggle="collapse"
                                  type="button"
                                >
                                  <span
                                    class="navbar-toggler-icon"
                                  />
                                </button>
                                <a
                                  class="navbar-brand"
                                  href="/"
                                >
                                  EVENTS MANAGER
                                </a>
                                <div
                                  class="collapse navbar-collapse"
                                  id="navbarText"
                                >
                                  <ul
                                    class="navbar-nav ml-auto"
                                  >
                                    <li
                                      class="nav-item active"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/"
                                      >
                                        Home 
                                        <span
                                          class="sr-only"
                                        >
                                          (current)
                                        </span>
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/addevent"
                                      >
                                        Add Event
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/centers"
                                      >
                                        Centers
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/SignOut"
                                      >
                                        Sign Out 
                                      </a>
                                    </li>
                                  </ul>
                                </div>
                              </nav>
                              <div
                                class="container events"
                              >
                                <div
                                  class="row event-row"
                                />
                              </div>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": MyEvents {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {},
                      "refs": Object {},
                      "state": Object {
                        "myEvents": Array [],
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": <div>
                    <nav
                      class="navbar navbar-toggleable-md navbar-light bg-faded"
                    >
                      <button
                        aria-controls="navbarText"
                        aria-expanded="false"
                        aria-label="Toggle navigation"
                        class="navbar-toggler navbar-toggler-right"
                        data-target="#navbarText"
                        data-toggle="collapse"
                        type="button"
                      >
                        <span
                          class="navbar-toggler-icon"
                        />
                      </button>
                      <a
                        class="navbar-brand"
                        href="/"
                      >
                        EVENTS MANAGER
                      </a>
                      <div
                        class="collapse navbar-collapse"
                        id="navbarText"
                      >
                        <ul
                          class="navbar-nav ml-auto"
                        >
                          <li
                            class="nav-item active"
                          >
                            <a
                              class="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                class="sr-only"
                              >
                                (current)
                              </span>
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/centers"
                            >
                              Centers
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/SignOut"
                            >
                              Sign Out 
                            </a>
                          </li>
                        </ul>
                      </div>
                    </nav>
                    <div
                      class="container events"
                    >
                      <div
                        class="row event-row"
                      />
                    </div>
                  </div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": <div
                  class="container events"
                >
                  <div
                    class="row event-row"
                  />
                </div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": [Circular],
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "page": "MyEvents",
            },
            "refs": Object {},
            "state": null,
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "page": "MyEvents",
          },
          "ref": null,
          "rendered": Object {
            "instance": <nav
              class="navbar navbar-toggleable-md navbar-light bg-faded"
            >
              <button
                aria-controls="navbarText"
                aria-expanded="false"
                aria-label="Toggle navigation"
                class="navbar-toggler navbar-toggler-right"
                data-target="#navbarText"
                data-toggle="collapse"
                type="button"
              >
                <span
                  class="navbar-toggler-icon"
                />
              </button>
              <a
                class="navbar-brand"
                href="/"
              >
                EVENTS MANAGER
              </a>
              <div
                class="collapse navbar-collapse"
                id="navbarText"
              >
                <ul
                  class="navbar-nav ml-auto"
                >
                  <li
                    class="nav-item active"
                  >
                    <a
                      class="nav-link"
                      href="/"
                    >
                      Home 
                      <span
                        class="sr-only"
                      >
                        (current)
                      </span>
                    </a>
                  </li>
                  <li
                    class="nav-item"
                  >
                    <a
                      class="nav-link"
                      href="/addevent"
                    >
                      Add Event
                    </a>
                  </li>
                  <li
                    class="nav-item"
                  >
                    <a
                      class="nav-link"
                      href="/centers"
                    >
                      Centers
                    </a>
                  </li>
                  <li
                    class="nav-item"
                  >
                    <a
                      class="nav-link"
                      href="/SignOut"
                    >
                      Sign Out 
                    </a>
                  </li>
                </ul>
              </div>
            </nav>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <button
                  aria-controls="navbarText"
                  aria-expanded="false"
                  aria-label="Toggle navigation"
                  className="navbar-toggler navbar-toggler-right"
                  data-target="#navbarText"
                  data-toggle="collapse"
                  type="button"
                >
                  <span
                    className="navbar-toggler-icon"
                  />
                </button>,
                <a
                  className="navbar-brand"
                  href="/"
                >
                  EVENTS MANAGER
                </a>,
                <div
                  className="collapse navbar-collapse"
                  id="navbarText"
                >
                  <ul
                    className="navbar-nav ml-auto"
                  >
                    <li
                      className="nav-item active"
                    >
                      <a
                        className="nav-link"
                        href="/"
                      >
                        Home 
                        <span
                          className="sr-only"
                        >
                          (current)
                        </span>
                      </a>
                    </li>
                    <li
                      className="nav-item"
                    >
                      <a
                        className="nav-link"
                        href="/addevent"
                      >
                        Add Event
                      </a>
                    </li>
                    <li
                      className="nav-item"
                    >
                      <a
                        className="nav-link"
                        href="/centers"
                      >
                        Centers
                      </a>
                    </li>
                    <li
                      className="nav-item"
                    >
                      <a
                        className="nav-link"
                        href="/SignOut"
                      >
                        Sign Out 
                      </a>
                    </li>
                  </ul>
                </div>,
              ],
              "className": "navbar navbar-toggleable-md navbar-light bg-faded",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <button
                  aria-controls="navbarText"
                  aria-expanded="false"
                  aria-label="Toggle navigation"
                  class="navbar-toggler navbar-toggler-right"
                  data-target="#navbarText"
                  data-toggle="collapse"
                  type="button"
                >
                  <span
                    class="navbar-toggler-icon"
                  />
                </button>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "aria-controls": "navbarText",
                  "aria-expanded": "false",
                  "aria-label": "Toggle navigation",
                  "children": <span
                    className="navbar-toggler-icon"
                  />,
                  "className": "navbar-toggler navbar-toggler-right",
                  "data-target": "#navbarText",
                  "data-toggle": "collapse",
                  "type": "button",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <span
                      class="navbar-toggler-icon"
                    />,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "navbar-toggler-icon",
                    },
                    "ref": null,
                    "rendered": Array [
                      undefined,
                    ],
                    "type": "span",
                  },
                ],
                "type": "button",
              },
              Object {
                "instance": <a
                  class="navbar-brand"
                  href="/"
                >
                  EVENTS MANAGER
                </a>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "EVENTS MANAGER",
                  "className": "navbar-brand",
                  "href": "/",
                },
                "ref": null,
                "rendered": Array [
                  "EVENTS MANAGER",
                ],
                "type": "a",
              },
              Object {
                "instance": <div
                  class="collapse navbar-collapse"
                  id="navbarText"
                >
                  <ul
                    class="navbar-nav ml-auto"
                  >
                    <li
                      class="nav-item active"
                    >
                      <a
                        class="nav-link"
                        href="/"
                      >
                        Home 
                        <span
                          class="sr-only"
                        >
                          (current)
                        </span>
                      </a>
                    </li>
                    <li
                      class="nav-item"
                    >
                      <a
                        class="nav-link"
                        href="/addevent"
                      >
                        Add Event
                      </a>
                    </li>
                    <li
                      class="nav-item"
                    >
                      <a
                        class="nav-link"
                        href="/centers"
                      >
                        Centers
                      </a>
                    </li>
                    <li
                      class="nav-item"
                    >
                      <a
                        class="nav-link"
                        href="/SignOut"
                      >
                        Sign Out 
                      </a>
                    </li>
                  </ul>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <ul
                    className="navbar-nav ml-auto"
                  >
                    <li
                      className="nav-item active"
                    >
                      <a
                        className="nav-link"
                        href="/"
                      >
                        Home 
                        <span
                          className="sr-only"
                        >
                          (current)
                        </span>
                      </a>
                    </li>
                    <li
                      className="nav-item"
                    >
                      <a
                        className="nav-link"
                        href="/addevent"
                      >
                        Add Event
                      </a>
                    </li>
                    <li
                      className="nav-item"
                    >
                      <a
                        className="nav-link"
                        href="/centers"
                      >
                        Centers
                      </a>
                    </li>
                    <li
                      className="nav-item"
                    >
                      <a
                        className="nav-link"
                        href="/SignOut"
                      >
                        Sign Out 
                      </a>
                    </li>
                  </ul>,
                  "className": "collapse navbar-collapse",
                  "id": "navbarText",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <ul
                      class="navbar-nav ml-auto"
                    >
                      <li
                        class="nav-item active"
                      >
                        <a
                          class="nav-link"
                          href="/"
                        >
                          Home 
                          <span
                            class="sr-only"
                          >
                            (current)
                          </span>
                        </a>
                      </li>
                      <li
                        class="nav-item"
                      >
                        <a
                          class="nav-link"
                          href="/addevent"
                        >
                          Add Event
                        </a>
                      </li>
                      <li
                        class="nav-item"
                      >
                        <a
                          class="nav-link"
                          href="/centers"
                        >
                          Centers
                        </a>
                      </li>
                      <li
                        class="nav-item"
                      >
                        <a
                          class="nav-link"
                          href="/SignOut"
                        >
                          Sign Out 
                        </a>
                      </li>
                    </ul>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <li
                          className="nav-item active"
                        >
                          <a
                            className="nav-link"
                            href="/"
                          >
                            Home 
                            <span
                              className="sr-only"
                            >
                              (current)
                            </span>
                          </a>
                        </li>,
                        <li
                          className="nav-item"
                        >
                          <a
                            className="nav-link"
                            href="/addevent"
                          >
                            Add Event
                          </a>
                        </li>,
                        <li
                          className="nav-item"
                        >
                          <a
                            className="nav-link"
                            href="/centers"
                          >
                            Centers
                          </a>
                        </li>,
                        <li
                          className="nav-item"
                        >
                          <a
                            className="nav-link"
                            href="/SignOut"
                          >
                            Sign Out 
                          </a>
                        </li>,
                      ],
                      "className": "navbar-nav ml-auto",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <li
                          class="nav-item active"
                        >
                          <a
                            class="nav-link"
                            href="/"
                          >
                            Home 
                            <span
                              class="sr-only"
                            >
                              (current)
                            </span>
                          </a>
                        </li>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <a
                            className="nav-link"
                            href="/"
                          >
                            Home 
                            <span
                              className="sr-only"
                            >
                              (current)
                            </span>
                          </a>,
                          "className": "nav-item active",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <a
                              class="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                class="sr-only"
                              >
                                (current)
                              </span>
                            </a>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                "Home ",
                                <span
                                  className="sr-only"
                                >
                                  (current)
                                </span>,
                              ],
                              "className": "nav-link",
                              "href": "/",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Home ",
                              Object {
                                "instance": <span
                                  class="sr-only"
                                >
                                  (current)
                                </span>,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "(current)",
                                  "className": "sr-only",
                                },
                                "ref": null,
                                "rendered": Array [
                                  "(current)",
                                ],
                                "type": "span",
                              },
                            ],
                            "type": "a",
                          },
                        ],
                        "type": "li",
                      },
                      Object {
                        "instance": <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/addevent"
                          >
                            Add Event
                          </a>
                        </li>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <a
                            className="nav-link"
                            href="/addevent"
                          >
                            Add Event
                          </a>,
                          "className": "nav-item",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <a
                              class="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Add Event",
                              "className": "nav-link",
                              "href": "/addevent",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Add Event",
                            ],
                            "type": "a",
                          },
                        ],
                        "type": "li",
                      },
                      Object {
                        "instance": <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/centers"
                          >
                            Centers
                          </a>
                        </li>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <a
                            className="nav-link"
                            href="/centers"
                          >
                            Centers
                          </a>,
                          "className": "nav-item",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <a
                              class="nav-link"
                              href="/centers"
                            >
                              Centers
                            </a>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Centers",
                              "className": "nav-link",
                              "href": "/centers",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Centers",
                            ],
                            "type": "a",
                          },
                        ],
                        "type": "li",
                      },
                      Object {
                        "instance": <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/SignOut"
                          >
                            Sign Out 
                          </a>
                        </li>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <a
                            className="nav-link"
                            href="/SignOut"
                          >
                            Sign Out 
                          </a>,
                          "className": "nav-item",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <a
                              class="nav-link"
                              href="/SignOut"
                            >
                              Sign Out 
                            </a>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Sign Out ",
                              "className": "nav-link",
                              "href": "/SignOut",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Sign Out ",
                            ],
                            "type": "a",
                          },
                        ],
                        "type": "li",
                      },
                    ],
                    "type": "ul",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "nav",
          },
          "type": [Function],
        },
        Object {
          "instance": <div
            class="container events"
          >
            <div
              class="row event-row"
            />
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row event-row"
            />,
            "className": "container events",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <div
                class="row event-row"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [],
                "className": "row event-row",
              },
              "ref": null,
              "rendered": Array [
                Array [],
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": MyEvents {
        "_reactInternalFiber": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 3,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <nav
                        class="navbar navbar-toggleable-md navbar-light bg-faded"
                      >
                        <button
                          aria-controls="navbarText"
                          aria-expanded="false"
                          aria-label="Toggle navigation"
                          class="navbar-toggler navbar-toggler-right"
                          data-target="#navbarText"
                          data-toggle="collapse"
                          type="button"
                        >
                          <span
                            class="navbar-toggler-icon"
                          />
                        </button>
                        <a
                          class="navbar-brand"
                          href="/"
                        >
                          EVENTS MANAGER
                        </a>
                        <div
                          class="collapse navbar-collapse"
                          id="navbarText"
                        >
                          <ul
                            class="navbar-nav ml-auto"
                          >
                            <li
                              class="nav-item active"
                            >
                              <a
                                class="nav-link"
                                href="/"
                              >
                                Home 
                                <span
                                  class="sr-only"
                                >
                                  (current)
                                </span>
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/addevent"
                              >
                                Add Event
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/centers"
                              >
                                Centers
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/SignOut"
                              >
                                Sign Out 
                              </a>
                            </li>
                          </ul>
                        </div>
                      </nav>
                      <div
                        class="container events"
                      >
                        <div
                          class="row event-row"
                        />
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "hydrate": false,
                  "isReadyForCommit": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "callbackList": null,
                  "expirationTime": 1,
                  "first": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "nextCallback": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                  },
                  "hasForceUpdate": false,
                  "isInitialized": false,
                  "isProcessing": false,
                  "last": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "nextCallback": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                  },
                },
              },
              "child": [Circular],
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <nav
                      class="navbar navbar-toggleable-md navbar-light bg-faded"
                    >
                      <button
                        aria-controls="navbarText"
                        aria-expanded="false"
                        aria-label="Toggle navigation"
                        class="navbar-toggler navbar-toggler-right"
                        data-target="#navbarText"
                        data-toggle="collapse"
                        type="button"
                      >
                        <span
                          class="navbar-toggler-icon"
                        />
                      </button>
                      <a
                        class="navbar-brand"
                        href="/"
                      >
                        EVENTS MANAGER
                      </a>
                      <div
                        class="collapse navbar-collapse"
                        id="navbarText"
                      >
                        <ul
                          class="navbar-nav ml-auto"
                        >
                          <li
                            class="nav-item active"
                          >
                            <a
                              class="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                class="sr-only"
                              >
                                (current)
                              </span>
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/centers"
                            >
                              Centers
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/SignOut"
                            >
                              Sign Out 
                            </a>
                          </li>
                        </ul>
                      </div>
                    </nav>
                    <div
                      class="container events"
                    >
                      <div
                        class="row event-row"
                      />
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "hydrate": false,
                "isReadyForCommit": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": null,
            },
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 12,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "className": "navbar-toggler-icon",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <span
                      class="navbar-toggler-icon"
                    />,
                    "tag": 5,
                    "type": "span",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "aria-controls": "navbarText",
                    "aria-expanded": "false",
                    "aria-label": "Toggle navigation",
                    "children": <span
                      className="navbar-toggler-icon"
                    />,
                    "className": "navbar-toggler navbar-toggler-right",
                    "data-target": "#navbarText",
                    "data-toggle": "collapse",
                    "type": "button",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "EVENTS MANAGER",
                      "className": "navbar-brand",
                      "href": "/",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 13,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 14,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 18,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 19,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": "Home ",
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 20,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 1,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "(current)",
                                  "className": "sr-only",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <span
                                  class="sr-only"
                                >
                                  (current)
                                </span>,
                                "tag": 5,
                                "type": "span",
                                "updateQueue": null,
                              },
                              "stateNode": Home ,
                              "tag": 6,
                              "type": null,
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                "Home ",
                                <span
                                  className="sr-only"
                                >
                                  (current)
                                </span>,
                              ],
                              "className": "nav-link",
                              "href": "/",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <a
                              class="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                class="sr-only"
                              >
                                (current)
                              </span>
                            </a>,
                            "tag": 5,
                            "type": "a",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <a
                              className="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                className="sr-only"
                              >
                                (current)
                              </span>
                            </a>,
                            "className": "nav-item active",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 15,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 21,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Add Event",
                                "className": "nav-link",
                                "href": "/addevent",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <a
                                class="nav-link"
                                href="/addevent"
                              >
                                Add Event
                              </a>,
                              "tag": 5,
                              "type": "a",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 1,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <a
                                className="nav-link"
                                href="/addevent"
                              >
                                Add Event
                              </a>,
                              "className": "nav-item",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 16,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 22,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Centers",
                                  "className": "nav-link",
                                  "href": "/centers",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <a
                                  class="nav-link"
                                  href="/centers"
                                >
                                  Centers
                                </a>,
                                "tag": 5,
                                "type": "a",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 2,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <a
                                  className="nav-link"
                                  href="/centers"
                                >
                                  Centers
                                </a>,
                                "className": "nav-item",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 17,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 23,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "Sign Out ",
                                    "className": "nav-link",
                                    "href": "/SignOut",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": <a
                                    class="nav-link"
                                    href="/SignOut"
                                  >
                                    Sign Out 
                                  </a>,
                                  "tag": 5,
                                  "type": "a",
                                  "updateQueue": null,
                                },
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 3,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <a
                                    className="nav-link"
                                    href="/SignOut"
                                  >
                                    Sign Out 
                                  </a>,
                                  "className": "nav-item",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <li
                                  class="nav-item"
                                >
                                  <a
                                    class="nav-link"
                                    href="/SignOut"
                                  >
                                    Sign Out 
                                  </a>
                                </li>,
                                "tag": 5,
                                "type": "li",
                                "updateQueue": null,
                              },
                              "stateNode": <li
                                class="nav-item"
                              >
                                <a
                                  class="nav-link"
                                  href="/centers"
                                >
                                  Centers
                                </a>
                              </li>,
                              "tag": 5,
                              "type": "li",
                              "updateQueue": null,
                            },
                            "stateNode": <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/addevent"
                              >
                                Add Event
                              </a>
                            </li>,
                            "tag": 5,
                            "type": "li",
                            "updateQueue": null,
                          },
                          "stateNode": <li
                            class="nav-item active"
                          >
                            <a
                              class="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                class="sr-only"
                              >
                                (current)
                              </span>
                            </a>
                          </li>,
                          "tag": 5,
                          "type": "li",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <li
                              className="nav-item active"
                            >
                              <a
                                className="nav-link"
                                href="/"
                              >
                                Home 
                                <span
                                  className="sr-only"
                                >
                                  (current)
                                </span>
                              </a>
                            </li>,
                            <li
                              className="nav-item"
                            >
                              <a
                                className="nav-link"
                                href="/addevent"
                              >
                                Add Event
                              </a>
                            </li>,
                            <li
                              className="nav-item"
                            >
                              <a
                                className="nav-link"
                                href="/centers"
                              >
                                Centers
                              </a>
                            </li>,
                            <li
                              className="nav-item"
                            >
                              <a
                                className="nav-link"
                                href="/SignOut"
                              >
                                Sign Out 
                              </a>
                            </li>,
                          ],
                          "className": "navbar-nav ml-auto",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <ul
                          class="navbar-nav ml-auto"
                        >
                          <li
                            class="nav-item active"
                          >
                            <a
                              class="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                class="sr-only"
                              >
                                (current)
                              </span>
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/centers"
                            >
                              Centers
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/SignOut"
                            >
                              Sign Out 
                            </a>
                          </li>
                        </ul>,
                        "tag": 5,
                        "type": "ul",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <ul
                          className="navbar-nav ml-auto"
                        >
                          <li
                            className="nav-item active"
                          >
                            <a
                              className="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                className="sr-only"
                              >
                                (current)
                              </span>
                            </a>
                          </li>
                          <li
                            className="nav-item"
                          >
                            <a
                              className="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>
                          </li>
                          <li
                            className="nav-item"
                          >
                            <a
                              className="nav-link"
                              href="/centers"
                            >
                              Centers
                            </a>
                          </li>
                          <li
                            className="nav-item"
                          >
                            <a
                              className="nav-link"
                              href="/SignOut"
                            >
                              Sign Out 
                            </a>
                          </li>
                        </ul>,
                        "className": "collapse navbar-collapse",
                        "id": "navbarText",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="collapse navbar-collapse"
                        id="navbarText"
                      >
                        <ul
                          class="navbar-nav ml-auto"
                        >
                          <li
                            class="nav-item active"
                          >
                            <a
                              class="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                class="sr-only"
                              >
                                (current)
                              </span>
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/centers"
                            >
                              Centers
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/SignOut"
                            >
                              Sign Out 
                            </a>
                          </li>
                        </ul>
                      </div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <a
                      class="navbar-brand"
                      href="/"
                    >
                      EVENTS MANAGER
                    </a>,
                    "tag": 5,
                    "type": "a",
                    "updateQueue": null,
                  },
                  "stateNode": <button
                    aria-controls="navbarText"
                    aria-expanded="false"
                    aria-label="Toggle navigation"
                    class="navbar-toggler navbar-toggler-right"
                    data-target="#navbarText"
                    data-toggle="collapse"
                    type="button"
                  >
                    <span
                      class="navbar-toggler-icon"
                    />
                  </button>,
                  "tag": 5,
                  "type": "button",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <button
                      aria-controls="navbarText"
                      aria-expanded="false"
                      aria-label="Toggle navigation"
                      className="navbar-toggler navbar-toggler-right"
                      data-target="#navbarText"
                      data-toggle="collapse"
                      type="button"
                    >
                      <span
                        className="navbar-toggler-icon"
                      />
                    </button>,
                    <a
                      className="navbar-brand"
                      href="/"
                    >
                      EVENTS MANAGER
                    </a>,
                    <div
                      className="collapse navbar-collapse"
                      id="navbarText"
                    >
                      <ul
                        className="navbar-nav ml-auto"
                      >
                        <li
                          className="nav-item active"
                        >
                          <a
                            className="nav-link"
                            href="/"
                          >
                            Home 
                            <span
                              className="sr-only"
                            >
                              (current)
                            </span>
                          </a>
                        </li>
                        <li
                          className="nav-item"
                        >
                          <a
                            className="nav-link"
                            href="/addevent"
                          >
                            Add Event
                          </a>
                        </li>
                        <li
                          className="nav-item"
                        >
                          <a
                            className="nav-link"
                            href="/centers"
                          >
                            Centers
                          </a>
                        </li>
                        <li
                          className="nav-item"
                        >
                          <a
                            className="nav-link"
                            href="/SignOut"
                          >
                            Sign Out 
                          </a>
                        </li>
                      </ul>
                    </div>,
                  ],
                  "className": "navbar navbar-toggleable-md navbar-light bg-faded",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <nav
                  class="navbar navbar-toggleable-md navbar-light bg-faded"
                >
                  <button
                    aria-controls="navbarText"
                    aria-expanded="false"
                    aria-label="Toggle navigation"
                    class="navbar-toggler navbar-toggler-right"
                    data-target="#navbarText"
                    data-toggle="collapse"
                    type="button"
                  >
                    <span
                      class="navbar-toggler-icon"
                    />
                  </button>
                  <a
                    class="navbar-brand"
                    href="/"
                  >
                    EVENTS MANAGER
                  </a>
                  <div
                    class="collapse navbar-collapse"
                    id="navbarText"
                  >
                    <ul
                      class="navbar-nav ml-auto"
                    >
                      <li
                        class="nav-item active"
                      >
                        <a
                          class="nav-link"
                          href="/"
                        >
                          Home 
                          <span
                            class="sr-only"
                          >
                            (current)
                          </span>
                        </a>
                      </li>
                      <li
                        class="nav-item"
                      >
                        <a
                          class="nav-link"
                          href="/addevent"
                        >
                          Add Event
                        </a>
                      </li>
                      <li
                        class="nav-item"
                      >
                        <a
                          class="nav-link"
                          href="/centers"
                        >
                          Centers
                        </a>
                      </li>
                      <li
                        class="nav-item"
                      >
                        <a
                          class="nav-link"
                          href="/SignOut"
                        >
                          Sign Out 
                        </a>
                      </li>
                    </ul>
                  </div>
                </nav>,
                "tag": 5,
                "type": "nav",
                "updateQueue": null,
              },
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "page": "MyEvents",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 24,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [],
                    "className": "row event-row",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="row event-row"
                  />,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <div
                    className="row event-row"
                  />,
                  "className": "container events",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="container events"
                >
                  <div
                    class="row event-row"
                  />
                </div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": NavBar {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "page": "MyEvents",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <NavBar
                  page="MyEvents"
                />,
                <div
                  className="container events"
                >
                  <div
                    className="row event-row"
                  />
                </div>,
              ],
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": <div>
              <nav
                class="navbar navbar-toggleable-md navbar-light bg-faded"
              >
                <button
                  aria-controls="navbarText"
                  aria-expanded="false"
                  aria-label="Toggle navigation"
                  class="navbar-toggler navbar-toggler-right"
                  data-target="#navbarText"
                  data-toggle="collapse"
                  type="button"
                >
                  <span
                    class="navbar-toggler-icon"
                  />
                </button>
                <a
                  class="navbar-brand"
                  href="/"
                >
                  EVENTS MANAGER
                </a>
                <div
                  class="collapse navbar-collapse"
                  id="navbarText"
                >
                  <ul
                    class="navbar-nav ml-auto"
                  >
                    <li
                      class="nav-item active"
                    >
                      <a
                        class="nav-link"
                        href="/"
                      >
                        Home 
                        <span
                          class="sr-only"
                        >
                          (current)
                        </span>
                      </a>
                    </li>
                    <li
                      class="nav-item"
                    >
                      <a
                        class="nav-link"
                        href="/addevent"
                      >
                        Add Event
                      </a>
                    </li>
                    <li
                      class="nav-item"
                    >
                      <a
                        class="nav-link"
                        href="/centers"
                      >
                        Centers
                      </a>
                    </li>
                    <li
                      class="nav-item"
                    >
                      <a
                        class="nav-link"
                        href="/SignOut"
                      >
                        Sign Out 
                      </a>
                    </li>
                  </ul>
                </div>
              </nav>
              <div
                class="container events"
              >
                <div
                  class="row event-row"
                />
              </div>
            </div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 5,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {},
          "memoizedState": Object {
            "myEvents": Array [],
          },
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": FiberNode {
            "_debugID": 3,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <nav
                        class="navbar navbar-toggleable-md navbar-light bg-faded"
                      >
                        <button
                          aria-controls="navbarText"
                          aria-expanded="false"
                          aria-label="Toggle navigation"
                          class="navbar-toggler navbar-toggler-right"
                          data-target="#navbarText"
                          data-toggle="collapse"
                          type="button"
                        >
                          <span
                            class="navbar-toggler-icon"
                          />
                        </button>
                        <a
                          class="navbar-brand"
                          href="/"
                        >
                          EVENTS MANAGER
                        </a>
                        <div
                          class="collapse navbar-collapse"
                          id="navbarText"
                        >
                          <ul
                            class="navbar-nav ml-auto"
                          >
                            <li
                              class="nav-item active"
                            >
                              <a
                                class="nav-link"
                                href="/"
                              >
                                Home 
                                <span
                                  class="sr-only"
                                >
                                  (current)
                                </span>
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/addevent"
                              >
                                Add Event
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/centers"
                              >
                                Centers
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/SignOut"
                              >
                                Sign Out 
                              </a>
                            </li>
                          </ul>
                        </div>
                      </nav>
                      <div
                        class="container events"
                      >
                        <div
                          class="row event-row"
                        />
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "hydrate": false,
                  "isReadyForCommit": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "callbackList": null,
                  "expirationTime": 1,
                  "first": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "nextCallback": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                  },
                  "hasForceUpdate": false,
                  "isInitialized": false,
                  "isProcessing": false,
                  "last": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "nextCallback": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                  },
                },
              },
              "child": [Circular],
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <nav
                      class="navbar navbar-toggleable-md navbar-light bg-faded"
                    >
                      <button
                        aria-controls="navbarText"
                        aria-expanded="false"
                        aria-label="Toggle navigation"
                        class="navbar-toggler navbar-toggler-right"
                        data-target="#navbarText"
                        data-toggle="collapse"
                        type="button"
                      >
                        <span
                          class="navbar-toggler-icon"
                        />
                      </button>
                      <a
                        class="navbar-brand"
                        href="/"
                      >
                        EVENTS MANAGER
                      </a>
                      <div
                        class="collapse navbar-collapse"
                        id="navbarText"
                      >
                        <ul
                          class="navbar-nav ml-auto"
                        >
                          <li
                            class="nav-item active"
                          >
                            <a
                              class="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                class="sr-only"
                              >
                                (current)
                              </span>
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/centers"
                            >
                              Centers
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/SignOut"
                            >
                              Sign Out 
                            </a>
                          </li>
                        </ul>
                      </div>
                    </nav>
                    <div
                      class="container events"
                    >
                      <div
                        class="row event-row"
                      />
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "hydrate": false,
                "isReadyForCommit": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": null,
            },
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "myEvents": Array [],
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {},
      "ref": null,
      "rendered": Object {
        "instance": <div>
          <nav
            class="navbar navbar-toggleable-md navbar-light bg-faded"
          >
            <button
              aria-controls="navbarText"
              aria-expanded="false"
              aria-label="Toggle navigation"
              class="navbar-toggler navbar-toggler-right"
              data-target="#navbarText"
              data-toggle="collapse"
              type="button"
            >
              <span
                class="navbar-toggler-icon"
              />
            </button>
            <a
              class="navbar-brand"
              href="/"
            >
              EVENTS MANAGER
            </a>
            <div
              class="collapse navbar-collapse"
              id="navbarText"
            >
              <ul
                class="navbar-nav ml-auto"
              >
                <li
                  class="nav-item active"
                >
                  <a
                    class="nav-link"
                    href="/"
                  >
                    Home 
                    <span
                      class="sr-only"
                    >
                      (current)
                    </span>
                  </a>
                </li>
                <li
                  class="nav-item"
                >
                  <a
                    class="nav-link"
                    href="/addevent"
                  >
                    Add Event
                  </a>
                </li>
                <li
                  class="nav-item"
                >
                  <a
                    class="nav-link"
                    href="/centers"
                  >
                    Centers
                  </a>
                </li>
                <li
                  class="nav-item"
                >
                  <a
                    class="nav-link"
                    href="/SignOut"
                  >
                    Sign Out 
                  </a>
                </li>
              </ul>
            </div>
          </nav>
          <div
            class="container events"
          >
            <div
              class="row event-row"
            />
          </div>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <NavBar
              page="MyEvents"
            />,
            <div
              className="container events"
            >
              <div
                className="row event-row"
              />
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": NavBar {
              "_reactInternalFiber": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 4,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {},
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <nav
                                class="navbar navbar-toggleable-md navbar-light bg-faded"
                              >
                                <button
                                  aria-controls="navbarText"
                                  aria-expanded="false"
                                  aria-label="Toggle navigation"
                                  class="navbar-toggler navbar-toggler-right"
                                  data-target="#navbarText"
                                  data-toggle="collapse"
                                  type="button"
                                >
                                  <span
                                    class="navbar-toggler-icon"
                                  />
                                </button>
                                <a
                                  class="navbar-brand"
                                  href="/"
                                >
                                  EVENTS MANAGER
                                </a>
                                <div
                                  class="collapse navbar-collapse"
                                  id="navbarText"
                                >
                                  <ul
                                    class="navbar-nav ml-auto"
                                  >
                                    <li
                                      class="nav-item active"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/"
                                      >
                                        Home 
                                        <span
                                          class="sr-only"
                                        >
                                          (current)
                                        </span>
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/addevent"
                                      >
                                        Add Event
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/centers"
                                      >
                                        Centers
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/SignOut"
                                      >
                                        Sign Out 
                                      </a>
                                    </li>
                                  </ul>
                                </div>
                              </nav>
                              <div
                                class="container events"
                              >
                                <div
                                  class="row event-row"
                                />
                              </div>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
                              />,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
                              />,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={Object {}}
                        />,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <nav
                              class="navbar navbar-toggleable-md navbar-light bg-faded"
                            >
                              <button
                                aria-controls="navbarText"
                                aria-expanded="false"
                                aria-label="Toggle navigation"
                                class="navbar-toggler navbar-toggler-right"
                                data-target="#navbarText"
                                data-toggle="collapse"
                                type="button"
                              >
                                <span
                                  class="navbar-toggler-icon"
                                />
                              </button>
                              <a
                                class="navbar-brand"
                                href="/"
                              >
                                EVENTS MANAGER
                              </a>
                              <div
                                class="collapse navbar-collapse"
                                id="navbarText"
                              >
                                <ul
                                  class="navbar-nav ml-auto"
                                >
                                  <li
                                    class="nav-item active"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/"
                                    >
                                      Home 
                                      <span
                                        class="sr-only"
                                      >
                                        (current)
                                      </span>
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/addevent"
                                    >
                                      Add Event
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/centers"
                                    >
                                      Centers
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/SignOut"
                                    >
                                      Sign Out 
                                    </a>
                                  </li>
                                </ul>
                              </div>
                            </nav>
                            <div
                              class="container events"
                            >
                              <div
                                class="row event-row"
                              />
                            </div>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <NavBar
                          page="MyEvents"
                        />,
                        <div
                          className="container events"
                        >
                          <div
                            className="row event-row"
                          />
                        </div>,
                      ],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div>
                      <nav
                        class="navbar navbar-toggleable-md navbar-light bg-faded"
                      >
                        <button
                          aria-controls="navbarText"
                          aria-expanded="false"
                          aria-label="Toggle navigation"
                          class="navbar-toggler navbar-toggler-right"
                          data-target="#navbarText"
                          data-toggle="collapse"
                          type="button"
                        >
                          <span
                            class="navbar-toggler-icon"
                          />
                        </button>
                        <a
                          class="navbar-brand"
                          href="/"
                        >
                          EVENTS MANAGER
                        </a>
                        <div
                          class="collapse navbar-collapse"
                          id="navbarText"
                        >
                          <ul
                            class="navbar-nav ml-auto"
                          >
                            <li
                              class="nav-item active"
                            >
                              <a
                                class="nav-link"
                                href="/"
                              >
                                Home 
                                <span
                                  class="sr-only"
                                >
                                  (current)
                                </span>
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/addevent"
                              >
                                Add Event
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/centers"
                              >
                                Centers
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/SignOut"
                              >
                                Sign Out 
                              </a>
                            </li>
                          </ul>
                        </div>
                      </nav>
                      <div
                        class="container events"
                      >
                        <div
                          class="row event-row"
                        />
                      </div>
                    </div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 5,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": Object {
                    "myEvents": Array [],
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 3,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {},
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <nav
                                class="navbar navbar-toggleable-md navbar-light bg-faded"
                              >
                                <button
                                  aria-controls="navbarText"
                                  aria-expanded="false"
                                  aria-label="Toggle navigation"
                                  class="navbar-toggler navbar-toggler-right"
                                  data-target="#navbarText"
                                  data-toggle="collapse"
                                  type="button"
                                >
                                  <span
                                    class="navbar-toggler-icon"
                                  />
                                </button>
                                <a
                                  class="navbar-brand"
                                  href="/"
                                >
                                  EVENTS MANAGER
                                </a>
                                <div
                                  class="collapse navbar-collapse"
                                  id="navbarText"
                                >
                                  <ul
                                    class="navbar-nav ml-auto"
                                  >
                                    <li
                                      class="nav-item active"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/"
                                      >
                                        Home 
                                        <span
                                          class="sr-only"
                                        >
                                          (current)
                                        </span>
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/addevent"
                                      >
                                        Add Event
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/centers"
                                      >
                                        Centers
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/SignOut"
                                      >
                                        Sign Out 
                                      </a>
                                    </li>
                                  </ul>
                                </div>
                              </nav>
                              <div
                                class="container events"
                              >
                                <div
                                  class="row event-row"
                                />
                              </div>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
                              />,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "nextCallback": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={Object {}}
                              />,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={Object {}}
                        />,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <nav
                              class="navbar navbar-toggleable-md navbar-light bg-faded"
                            >
                              <button
                                aria-controls="navbarText"
                                aria-expanded="false"
                                aria-label="Toggle navigation"
                                class="navbar-toggler navbar-toggler-right"
                                data-target="#navbarText"
                                data-toggle="collapse"
                                type="button"
                              >
                                <span
                                  class="navbar-toggler-icon"
                                />
                              </button>
                              <a
                                class="navbar-brand"
                                href="/"
                              >
                                EVENTS MANAGER
                              </a>
                              <div
                                class="collapse navbar-collapse"
                                id="navbarText"
                              >
                                <ul
                                  class="navbar-nav ml-auto"
                                >
                                  <li
                                    class="nav-item active"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/"
                                    >
                                      Home 
                                      <span
                                        class="sr-only"
                                      >
                                        (current)
                                      </span>
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/addevent"
                                    >
                                      Add Event
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/centers"
                                    >
                                      Centers
                                    </a>
                                  </li>
                                  <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/SignOut"
                                    >
                                      Sign Out 
                                    </a>
                                  </li>
                                </ul>
                              </div>
                            </nav>
                            <div
                              class="container events"
                            >
                              <div
                                class="row event-row"
                              />
                            </div>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "hydrate": false,
                        "isReadyForCommit": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": MyEvents {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {},
                    "refs": Object {},
                    "state": Object {
                      "myEvents": Array [],
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "className": "navbar-toggler-icon",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <span
                        class="navbar-toggler-icon"
                      />,
                      "tag": 5,
                      "type": "span",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "aria-controls": "navbarText",
                      "aria-expanded": "false",
                      "aria-label": "Toggle navigation",
                      "children": <span
                        className="navbar-toggler-icon"
                      />,
                      "className": "navbar-toggler navbar-toggler-right",
                      "data-target": "#navbarText",
                      "data-toggle": "collapse",
                      "type": "button",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "EVENTS MANAGER",
                        "className": "navbar-brand",
                        "href": "/",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 11,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 13,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 14,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 18,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 19,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": "Home ",
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": FiberNode {
                                  "_debugID": 20,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 1,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "(current)",
                                    "className": "sr-only",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": <span
                                    class="sr-only"
                                  >
                                    (current)
                                  </span>,
                                  "tag": 5,
                                  "type": "span",
                                  "updateQueue": null,
                                },
                                "stateNode": Home ,
                                "tag": 6,
                                "type": null,
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  "Home ",
                                  <span
                                    className="sr-only"
                                  >
                                    (current)
                                  </span>,
                                ],
                                "className": "nav-link",
                                "href": "/",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <a
                                class="nav-link"
                                href="/"
                              >
                                Home 
                                <span
                                  class="sr-only"
                                >
                                  (current)
                                </span>
                              </a>,
                              "tag": 5,
                              "type": "a",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <a
                                className="nav-link"
                                href="/"
                              >
                                Home 
                                <span
                                  className="sr-only"
                                >
                                  (current)
                                </span>
                              </a>,
                              "className": "nav-item active",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 15,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 21,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Add Event",
                                  "className": "nav-link",
                                  "href": "/addevent",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <a
                                  class="nav-link"
                                  href="/addevent"
                                >
                                  Add Event
                                </a>,
                                "tag": 5,
                                "type": "a",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <a
                                  className="nav-link"
                                  href="/addevent"
                                >
                                  Add Event
                                </a>,
                                "className": "nav-item",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 16,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 22,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "alternate": null,
                                  "child": null,
                                  "effectTag": 0,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "Centers",
                                    "className": "nav-link",
                                    "href": "/centers",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": <a
                                    class="nav-link"
                                    href="/centers"
                                  >
                                    Centers
                                  </a>,
                                  "tag": 5,
                                  "type": "a",
                                  "updateQueue": null,
                                },
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 2,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <a
                                    className="nav-link"
                                    href="/centers"
                                  >
                                    Centers
                                  </a>,
                                  "className": "nav-item",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": FiberNode {
                                  "_debugID": 17,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugID": 23,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "alternate": null,
                                    "child": null,
                                    "effectTag": 0,
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 0,
                                    "internalContextTag": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": "Sign Out ",
                                      "className": "nav-link",
                                      "href": "/SignOut",
                                    },
                                    "memoizedState": null,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": [Circular],
                                    "sibling": null,
                                    "stateNode": <a
                                      class="nav-link"
                                      href="/SignOut"
                                    >
                                      Sign Out 
                                    </a>,
                                    "tag": 5,
                                    "type": "a",
                                    "updateQueue": null,
                                  },
                                  "effectTag": 0,
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 3,
                                  "internalContextTag": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": <a
                                      className="nav-link"
                                      href="/SignOut"
                                    >
                                      Sign Out 
                                    </a>,
                                    "className": "nav-item",
                                  },
                                  "memoizedState": null,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": [Circular],
                                  "sibling": null,
                                  "stateNode": <li
                                    class="nav-item"
                                  >
                                    <a
                                      class="nav-link"
                                      href="/SignOut"
                                    >
                                      Sign Out 
                                    </a>
                                  </li>,
                                  "tag": 5,
                                  "type": "li",
                                  "updateQueue": null,
                                },
                                "stateNode": <li
                                  class="nav-item"
                                >
                                  <a
                                    class="nav-link"
                                    href="/centers"
                                  >
                                    Centers
                                  </a>
                                </li>,
                                "tag": 5,
                                "type": "li",
                                "updateQueue": null,
                              },
                              "stateNode": <li
                                class="nav-item"
                              >
                                <a
                                  class="nav-link"
                                  href="/addevent"
                                >
                                  Add Event
                                </a>
                              </li>,
                              "tag": 5,
                              "type": "li",
                              "updateQueue": null,
                            },
                            "stateNode": <li
                              class="nav-item active"
                            >
                              <a
                                class="nav-link"
                                href="/"
                              >
                                Home 
                                <span
                                  class="sr-only"
                                >
                                  (current)
                                </span>
                              </a>
                            </li>,
                            "tag": 5,
                            "type": "li",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <li
                                className="nav-item active"
                              >
                                <a
                                  className="nav-link"
                                  href="/"
                                >
                                  Home 
                                  <span
                                    className="sr-only"
                                  >
                                    (current)
                                  </span>
                                </a>
                              </li>,
                              <li
                                className="nav-item"
                              >
                                <a
                                  className="nav-link"
                                  href="/addevent"
                                >
                                  Add Event
                                </a>
                              </li>,
                              <li
                                className="nav-item"
                              >
                                <a
                                  className="nav-link"
                                  href="/centers"
                                >
                                  Centers
                                </a>
                              </li>,
                              <li
                                className="nav-item"
                              >
                                <a
                                  className="nav-link"
                                  href="/SignOut"
                                >
                                  Sign Out 
                                </a>
                              </li>,
                            ],
                            "className": "navbar-nav ml-auto",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <ul
                            class="navbar-nav ml-auto"
                          >
                            <li
                              class="nav-item active"
                            >
                              <a
                                class="nav-link"
                                href="/"
                              >
                                Home 
                                <span
                                  class="sr-only"
                                >
                                  (current)
                                </span>
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/addevent"
                              >
                                Add Event
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/centers"
                              >
                                Centers
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/SignOut"
                              >
                                Sign Out 
                              </a>
                            </li>
                          </ul>,
                          "tag": 5,
                          "type": "ul",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 2,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <ul
                            className="navbar-nav ml-auto"
                          >
                            <li
                              className="nav-item active"
                            >
                              <a
                                className="nav-link"
                                href="/"
                              >
                                Home 
                                <span
                                  className="sr-only"
                                >
                                  (current)
                                </span>
                              </a>
                            </li>
                            <li
                              className="nav-item"
                            >
                              <a
                                className="nav-link"
                                href="/addevent"
                              >
                                Add Event
                              </a>
                            </li>
                            <li
                              className="nav-item"
                            >
                              <a
                                className="nav-link"
                                href="/centers"
                              >
                                Centers
                              </a>
                            </li>
                            <li
                              className="nav-item"
                            >
                              <a
                                className="nav-link"
                                href="/SignOut"
                              >
                                Sign Out 
                              </a>
                            </li>
                          </ul>,
                          "className": "collapse navbar-collapse",
                          "id": "navbarText",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div
                          class="collapse navbar-collapse"
                          id="navbarText"
                        >
                          <ul
                            class="navbar-nav ml-auto"
                          >
                            <li
                              class="nav-item active"
                            >
                              <a
                                class="nav-link"
                                href="/"
                              >
                                Home 
                                <span
                                  class="sr-only"
                                >
                                  (current)
                                </span>
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/addevent"
                              >
                                Add Event
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/centers"
                              >
                                Centers
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/SignOut"
                              >
                                Sign Out 
                              </a>
                            </li>
                          </ul>
                        </div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <a
                        class="navbar-brand"
                        href="/"
                      >
                        EVENTS MANAGER
                      </a>,
                      "tag": 5,
                      "type": "a",
                      "updateQueue": null,
                    },
                    "stateNode": <button
                      aria-controls="navbarText"
                      aria-expanded="false"
                      aria-label="Toggle navigation"
                      class="navbar-toggler navbar-toggler-right"
                      data-target="#navbarText"
                      data-toggle="collapse"
                      type="button"
                    >
                      <span
                        class="navbar-toggler-icon"
                      />
                    </button>,
                    "tag": 5,
                    "type": "button",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <button
                        aria-controls="navbarText"
                        aria-expanded="false"
                        aria-label="Toggle navigation"
                        className="navbar-toggler navbar-toggler-right"
                        data-target="#navbarText"
                        data-toggle="collapse"
                        type="button"
                      >
                        <span
                          className="navbar-toggler-icon"
                        />
                      </button>,
                      <a
                        className="navbar-brand"
                        href="/"
                      >
                        EVENTS MANAGER
                      </a>,
                      <div
                        className="collapse navbar-collapse"
                        id="navbarText"
                      >
                        <ul
                          className="navbar-nav ml-auto"
                        >
                          <li
                            className="nav-item active"
                          >
                            <a
                              className="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                className="sr-only"
                              >
                                (current)
                              </span>
                            </a>
                          </li>
                          <li
                            className="nav-item"
                          >
                            <a
                              className="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>
                          </li>
                          <li
                            className="nav-item"
                          >
                            <a
                              className="nav-link"
                              href="/centers"
                            >
                              Centers
                            </a>
                          </li>
                          <li
                            className="nav-item"
                          >
                            <a
                              className="nav-link"
                              href="/SignOut"
                            >
                              Sign Out 
                            </a>
                          </li>
                        </ul>
                      </div>,
                    ],
                    "className": "navbar navbar-toggleable-md navbar-light bg-faded",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <nav
                    class="navbar navbar-toggleable-md navbar-light bg-faded"
                  >
                    <button
                      aria-controls="navbarText"
                      aria-expanded="false"
                      aria-label="Toggle navigation"
                      class="navbar-toggler navbar-toggler-right"
                      data-target="#navbarText"
                      data-toggle="collapse"
                      type="button"
                    >
                      <span
                        class="navbar-toggler-icon"
                      />
                    </button>
                    <a
                      class="navbar-brand"
                      href="/"
                    >
                      EVENTS MANAGER
                    </a>
                    <div
                      class="collapse navbar-collapse"
                      id="navbarText"
                    >
                      <ul
                        class="navbar-nav ml-auto"
                      >
                        <li
                          class="nav-item active"
                        >
                          <a
                            class="nav-link"
                            href="/"
                          >
                            Home 
                            <span
                              class="sr-only"
                            >
                              (current)
                            </span>
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/addevent"
                          >
                            Add Event
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/centers"
                          >
                            Centers
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/SignOut"
                          >
                            Sign Out 
                          </a>
                        </li>
                      </ul>
                    </div>
                  </nav>,
                  "tag": 5,
                  "type": "nav",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "page": "MyEvents",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div>
                                <nav
                                  class="navbar navbar-toggleable-md navbar-light bg-faded"
                                >
                                  <button
                                    aria-controls="navbarText"
                                    aria-expanded="false"
                                    aria-label="Toggle navigation"
                                    class="navbar-toggler navbar-toggler-right"
                                    data-target="#navbarText"
                                    data-toggle="collapse"
                                    type="button"
                                  >
                                    <span
                                      class="navbar-toggler-icon"
                                    />
                                  </button>
                                  <a
                                    class="navbar-brand"
                                    href="/"
                                  >
                                    EVENTS MANAGER
                                  </a>
                                  <div
                                    class="collapse navbar-collapse"
                                    id="navbarText"
                                  >
                                    <ul
                                      class="navbar-nav ml-auto"
                                    >
                                      <li
                                        class="nav-item active"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/"
                                        >
                                          Home 
                                          <span
                                            class="sr-only"
                                          >
                                            (current)
                                          </span>
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/addevent"
                                        >
                                          Add Event
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/centers"
                                        >
                                          Centers
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/SignOut"
                                        >
                                          Sign Out 
                                        </a>
                                      </li>
                                    </ul>
                                  </div>
                                </nav>
                                <div
                                  class="container events"
                                >
                                  <div
                                    class="row event-row"
                                  />
                                </div>
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
                          />,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <nav
                                class="navbar navbar-toggleable-md navbar-light bg-faded"
                              >
                                <button
                                  aria-controls="navbarText"
                                  aria-expanded="false"
                                  aria-label="Toggle navigation"
                                  class="navbar-toggler navbar-toggler-right"
                                  data-target="#navbarText"
                                  data-toggle="collapse"
                                  type="button"
                                >
                                  <span
                                    class="navbar-toggler-icon"
                                  />
                                </button>
                                <a
                                  class="navbar-brand"
                                  href="/"
                                >
                                  EVENTS MANAGER
                                </a>
                                <div
                                  class="collapse navbar-collapse"
                                  id="navbarText"
                                >
                                  <ul
                                    class="navbar-nav ml-auto"
                                  >
                                    <li
                                      class="nav-item active"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/"
                                      >
                                        Home 
                                        <span
                                          class="sr-only"
                                        >
                                          (current)
                                        </span>
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/addevent"
                                      >
                                        Add Event
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/centers"
                                      >
                                        Centers
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/SignOut"
                                      >
                                        Sign Out 
                                      </a>
                                    </li>
                                  </ul>
                                </div>
                              </nav>
                              <div
                                class="container events"
                              >
                                <div
                                  class="row event-row"
                                />
                              </div>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 5,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": Object {
                      "myEvents": Array [],
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div>
                                <nav
                                  class="navbar navbar-toggleable-md navbar-light bg-faded"
                                >
                                  <button
                                    aria-controls="navbarText"
                                    aria-expanded="false"
                                    aria-label="Toggle navigation"
                                    class="navbar-toggler navbar-toggler-right"
                                    data-target="#navbarText"
                                    data-toggle="collapse"
                                    type="button"
                                  >
                                    <span
                                      class="navbar-toggler-icon"
                                    />
                                  </button>
                                  <a
                                    class="navbar-brand"
                                    href="/"
                                  >
                                    EVENTS MANAGER
                                  </a>
                                  <div
                                    class="collapse navbar-collapse"
                                    id="navbarText"
                                  >
                                    <ul
                                      class="navbar-nav ml-auto"
                                    >
                                      <li
                                        class="nav-item active"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/"
                                        >
                                          Home 
                                          <span
                                            class="sr-only"
                                          >
                                            (current)
                                          </span>
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/addevent"
                                        >
                                          Add Event
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/centers"
                                        >
                                          Centers
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/SignOut"
                                        >
                                          Sign Out 
                                        </a>
                                      </li>
                                    </ul>
                                  </div>
                                </nav>
                                <div
                                  class="container events"
                                >
                                  <div
                                    class="row event-row"
                                  />
                                </div>
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
                          />,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <nav
                                class="navbar navbar-toggleable-md navbar-light bg-faded"
                              >
                                <button
                                  aria-controls="navbarText"
                                  aria-expanded="false"
                                  aria-label="Toggle navigation"
                                  class="navbar-toggler navbar-toggler-right"
                                  data-target="#navbarText"
                                  data-toggle="collapse"
                                  type="button"
                                >
                                  <span
                                    class="navbar-toggler-icon"
                                  />
                                </button>
                                <a
                                  class="navbar-brand"
                                  href="/"
                                >
                                  EVENTS MANAGER
                                </a>
                                <div
                                  class="collapse navbar-collapse"
                                  id="navbarText"
                                >
                                  <ul
                                    class="navbar-nav ml-auto"
                                  >
                                    <li
                                      class="nav-item active"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/"
                                      >
                                        Home 
                                        <span
                                          class="sr-only"
                                        >
                                          (current)
                                        </span>
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/addevent"
                                      >
                                        Add Event
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/centers"
                                      >
                                        Centers
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/SignOut"
                                      >
                                        Sign Out 
                                      </a>
                                    </li>
                                  </ul>
                                </div>
                              </nav>
                              <div
                                class="container events"
                              >
                                <div
                                  class="row event-row"
                                />
                              </div>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": MyEvents {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {},
                      "refs": Object {},
                      "state": Object {
                        "myEvents": Array [],
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <NavBar
                        page="MyEvents"
                      />,
                      <div
                        className="container events"
                      >
                        <div
                          className="row event-row"
                        />
                      </div>,
                    ],
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div>
                                <nav
                                  class="navbar navbar-toggleable-md navbar-light bg-faded"
                                >
                                  <button
                                    aria-controls="navbarText"
                                    aria-expanded="false"
                                    aria-label="Toggle navigation"
                                    class="navbar-toggler navbar-toggler-right"
                                    data-target="#navbarText"
                                    data-toggle="collapse"
                                    type="button"
                                  >
                                    <span
                                      class="navbar-toggler-icon"
                                    />
                                  </button>
                                  <a
                                    class="navbar-brand"
                                    href="/"
                                  >
                                    EVENTS MANAGER
                                  </a>
                                  <div
                                    class="collapse navbar-collapse"
                                    id="navbarText"
                                  >
                                    <ul
                                      class="navbar-nav ml-auto"
                                    >
                                      <li
                                        class="nav-item active"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/"
                                        >
                                          Home 
                                          <span
                                            class="sr-only"
                                          >
                                            (current)
                                          </span>
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/addevent"
                                        >
                                          Add Event
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/centers"
                                        >
                                          Centers
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/SignOut"
                                        >
                                          Sign Out 
                                        </a>
                                      </li>
                                    </ul>
                                  </div>
                                </nav>
                                <div
                                  class="container events"
                                >
                                  <div
                                    class="row event-row"
                                  />
                                </div>
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
                          />,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <nav
                                class="navbar navbar-toggleable-md navbar-light bg-faded"
                              >
                                <button
                                  aria-controls="navbarText"
                                  aria-expanded="false"
                                  aria-label="Toggle navigation"
                                  class="navbar-toggler navbar-toggler-right"
                                  data-target="#navbarText"
                                  data-toggle="collapse"
                                  type="button"
                                >
                                  <span
                                    class="navbar-toggler-icon"
                                  />
                                </button>
                                <a
                                  class="navbar-brand"
                                  href="/"
                                >
                                  EVENTS MANAGER
                                </a>
                                <div
                                  class="collapse navbar-collapse"
                                  id="navbarText"
                                >
                                  <ul
                                    class="navbar-nav ml-auto"
                                  >
                                    <li
                                      class="nav-item active"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/"
                                      >
                                        Home 
                                        <span
                                          class="sr-only"
                                        >
                                          (current)
                                        </span>
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/addevent"
                                      >
                                        Add Event
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/centers"
                                      >
                                        Centers
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/SignOut"
                                      >
                                        Sign Out 
                                      </a>
                                    </li>
                                  </ul>
                                </div>
                              </nav>
                              <div
                                class="container events"
                              >
                                <div
                                  class="row event-row"
                                />
                              </div>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 5,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": Object {
                      "myEvents": Array [],
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div>
                                <nav
                                  class="navbar navbar-toggleable-md navbar-light bg-faded"
                                >
                                  <button
                                    aria-controls="navbarText"
                                    aria-expanded="false"
                                    aria-label="Toggle navigation"
                                    class="navbar-toggler navbar-toggler-right"
                                    data-target="#navbarText"
                                    data-toggle="collapse"
                                    type="button"
                                  >
                                    <span
                                      class="navbar-toggler-icon"
                                    />
                                  </button>
                                  <a
                                    class="navbar-brand"
                                    href="/"
                                  >
                                    EVENTS MANAGER
                                  </a>
                                  <div
                                    class="collapse navbar-collapse"
                                    id="navbarText"
                                  >
                                    <ul
                                      class="navbar-nav ml-auto"
                                    >
                                      <li
                                        class="nav-item active"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/"
                                        >
                                          Home 
                                          <span
                                            class="sr-only"
                                          >
                                            (current)
                                          </span>
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/addevent"
                                        >
                                          Add Event
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/centers"
                                        >
                                          Centers
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/SignOut"
                                        >
                                          Sign Out 
                                        </a>
                                      </li>
                                    </ul>
                                  </div>
                                </nav>
                                <div
                                  class="container events"
                                >
                                  <div
                                    class="row event-row"
                                  />
                                </div>
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
                          />,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <nav
                                class="navbar navbar-toggleable-md navbar-light bg-faded"
                              >
                                <button
                                  aria-controls="navbarText"
                                  aria-expanded="false"
                                  aria-label="Toggle navigation"
                                  class="navbar-toggler navbar-toggler-right"
                                  data-target="#navbarText"
                                  data-toggle="collapse"
                                  type="button"
                                >
                                  <span
                                    class="navbar-toggler-icon"
                                  />
                                </button>
                                <a
                                  class="navbar-brand"
                                  href="/"
                                >
                                  EVENTS MANAGER
                                </a>
                                <div
                                  class="collapse navbar-collapse"
                                  id="navbarText"
                                >
                                  <ul
                                    class="navbar-nav ml-auto"
                                  >
                                    <li
                                      class="nav-item active"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/"
                                      >
                                        Home 
                                        <span
                                          class="sr-only"
                                        >
                                          (current)
                                        </span>
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/addevent"
                                      >
                                        Add Event
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/centers"
                                      >
                                        Centers
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/SignOut"
                                      >
                                        Sign Out 
                                      </a>
                                    </li>
                                  </ul>
                                </div>
                              </nav>
                              <div
                                class="container events"
                              >
                                <div
                                  class="row event-row"
                                />
                              </div>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": MyEvents {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {},
                      "refs": Object {},
                      "state": Object {
                        "myEvents": Array [],
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": <div>
                    <nav
                      class="navbar navbar-toggleable-md navbar-light bg-faded"
                    >
                      <button
                        aria-controls="navbarText"
                        aria-expanded="false"
                        aria-label="Toggle navigation"
                        class="navbar-toggler navbar-toggler-right"
                        data-target="#navbarText"
                        data-toggle="collapse"
                        type="button"
                      >
                        <span
                          class="navbar-toggler-icon"
                        />
                      </button>
                      <a
                        class="navbar-brand"
                        href="/"
                      >
                        EVENTS MANAGER
                      </a>
                      <div
                        class="collapse navbar-collapse"
                        id="navbarText"
                      >
                        <ul
                          class="navbar-nav ml-auto"
                        >
                          <li
                            class="nav-item active"
                          >
                            <a
                              class="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                class="sr-only"
                              >
                                (current)
                              </span>
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/centers"
                            >
                              Centers
                            </a>
                          </li>
                          <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/SignOut"
                            >
                              Sign Out 
                            </a>
                          </li>
                        </ul>
                      </div>
                    </nav>
                    <div
                      class="container events"
                    >
                      <div
                        class="row event-row"
                      />
                    </div>
                  </div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "sibling": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div>
                                <nav
                                  class="navbar navbar-toggleable-md navbar-light bg-faded"
                                >
                                  <button
                                    aria-controls="navbarText"
                                    aria-expanded="false"
                                    aria-label="Toggle navigation"
                                    class="navbar-toggler navbar-toggler-right"
                                    data-target="#navbarText"
                                    data-toggle="collapse"
                                    type="button"
                                  >
                                    <span
                                      class="navbar-toggler-icon"
                                    />
                                  </button>
                                  <a
                                    class="navbar-brand"
                                    href="/"
                                  >
                                    EVENTS MANAGER
                                  </a>
                                  <div
                                    class="collapse navbar-collapse"
                                    id="navbarText"
                                  >
                                    <ul
                                      class="navbar-nav ml-auto"
                                    >
                                      <li
                                        class="nav-item active"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/"
                                        >
                                          Home 
                                          <span
                                            class="sr-only"
                                          >
                                            (current)
                                          </span>
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/addevent"
                                        >
                                          Add Event
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/centers"
                                        >
                                          Centers
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/SignOut"
                                        >
                                          Sign Out 
                                        </a>
                                      </li>
                                    </ul>
                                  </div>
                                </nav>
                                <div
                                  class="container events"
                                >
                                  <div
                                    class="row event-row"
                                  />
                                </div>
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
                          />,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <nav
                                class="navbar navbar-toggleable-md navbar-light bg-faded"
                              >
                                <button
                                  aria-controls="navbarText"
                                  aria-expanded="false"
                                  aria-label="Toggle navigation"
                                  class="navbar-toggler navbar-toggler-right"
                                  data-target="#navbarText"
                                  data-toggle="collapse"
                                  type="button"
                                >
                                  <span
                                    class="navbar-toggler-icon"
                                  />
                                </button>
                                <a
                                  class="navbar-brand"
                                  href="/"
                                >
                                  EVENTS MANAGER
                                </a>
                                <div
                                  class="collapse navbar-collapse"
                                  id="navbarText"
                                >
                                  <ul
                                    class="navbar-nav ml-auto"
                                  >
                                    <li
                                      class="nav-item active"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/"
                                      >
                                        Home 
                                        <span
                                          class="sr-only"
                                        >
                                          (current)
                                        </span>
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/addevent"
                                      >
                                        Add Event
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/centers"
                                      >
                                        Centers
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/SignOut"
                                      >
                                        Sign Out 
                                      </a>
                                    </li>
                                  </ul>
                                </div>
                              </nav>
                              <div
                                class="container events"
                              >
                                <div
                                  class="row event-row"
                                />
                              </div>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <NavBar
                            page="MyEvents"
                          />,
                          <div
                            className="container events"
                          >
                            <div
                              className="row event-row"
                            />
                          </div>,
                        ],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div>
                        <nav
                          class="navbar navbar-toggleable-md navbar-light bg-faded"
                        >
                          <button
                            aria-controls="navbarText"
                            aria-expanded="false"
                            aria-label="Toggle navigation"
                            class="navbar-toggler navbar-toggler-right"
                            data-target="#navbarText"
                            data-toggle="collapse"
                            type="button"
                          >
                            <span
                              class="navbar-toggler-icon"
                            />
                          </button>
                          <a
                            class="navbar-brand"
                            href="/"
                          >
                            EVENTS MANAGER
                          </a>
                          <div
                            class="collapse navbar-collapse"
                            id="navbarText"
                          >
                            <ul
                              class="navbar-nav ml-auto"
                            >
                              <li
                                class="nav-item active"
                              >
                                <a
                                  class="nav-link"
                                  href="/"
                                >
                                  Home 
                                  <span
                                    class="sr-only"
                                  >
                                    (current)
                                  </span>
                                </a>
                              </li>
                              <li
                                class="nav-item"
                              >
                                <a
                                  class="nav-link"
                                  href="/addevent"
                                >
                                  Add Event
                                </a>
                              </li>
                              <li
                                class="nav-item"
                              >
                                <a
                                  class="nav-link"
                                  href="/centers"
                                >
                                  Centers
                                </a>
                              </li>
                              <li
                                class="nav-item"
                              >
                                <a
                                  class="nav-link"
                                  href="/SignOut"
                                >
                                  Sign Out 
                                </a>
                              </li>
                            </ul>
                          </div>
                        </nav>
                        <div
                          class="container events"
                        >
                          <div
                            class="row event-row"
                          />
                        </div>
                      </div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 5,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": Object {
                      "myEvents": Array [],
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 3,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {},
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div>
                                <nav
                                  class="navbar navbar-toggleable-md navbar-light bg-faded"
                                >
                                  <button
                                    aria-controls="navbarText"
                                    aria-expanded="false"
                                    aria-label="Toggle navigation"
                                    class="navbar-toggler navbar-toggler-right"
                                    data-target="#navbarText"
                                    data-toggle="collapse"
                                    type="button"
                                  >
                                    <span
                                      class="navbar-toggler-icon"
                                    />
                                  </button>
                                  <a
                                    class="navbar-brand"
                                    href="/"
                                  >
                                    EVENTS MANAGER
                                  </a>
                                  <div
                                    class="collapse navbar-collapse"
                                    id="navbarText"
                                  >
                                    <ul
                                      class="navbar-nav ml-auto"
                                    >
                                      <li
                                        class="nav-item active"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/"
                                        >
                                          Home 
                                          <span
                                            class="sr-only"
                                          >
                                            (current)
                                          </span>
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/addevent"
                                        >
                                          Add Event
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/centers"
                                        >
                                          Centers
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/SignOut"
                                        >
                                          Sign Out 
                                        </a>
                                      </li>
                                    </ul>
                                  </div>
                                </nav>
                                <div
                                  class="container events"
                                >
                                  <div
                                    class="row event-row"
                                  />
                                </div>
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "nextCallback": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={Object {}}
                                />,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={Object {}}
                          />,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <nav
                                class="navbar navbar-toggleable-md navbar-light bg-faded"
                              >
                                <button
                                  aria-controls="navbarText"
                                  aria-expanded="false"
                                  aria-label="Toggle navigation"
                                  class="navbar-toggler navbar-toggler-right"
                                  data-target="#navbarText"
                                  data-toggle="collapse"
                                  type="button"
                                >
                                  <span
                                    class="navbar-toggler-icon"
                                  />
                                </button>
                                <a
                                  class="navbar-brand"
                                  href="/"
                                >
                                  EVENTS MANAGER
                                </a>
                                <div
                                  class="collapse navbar-collapse"
                                  id="navbarText"
                                >
                                  <ul
                                    class="navbar-nav ml-auto"
                                  >
                                    <li
                                      class="nav-item active"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/"
                                      >
                                        Home 
                                        <span
                                          class="sr-only"
                                        >
                                          (current)
                                        </span>
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/addevent"
                                      >
                                        Add Event
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/centers"
                                      >
                                        Centers
                                      </a>
                                    </li>
                                    <li
                                      class="nav-item"
                                    >
                                      <a
                                        class="nav-link"
                                        href="/SignOut"
                                      >
                                        Sign Out 
                                      </a>
                                    </li>
                                  </ul>
                                </div>
                              </nav>
                              <div
                                class="container events"
                              >
                                <div
                                  class="row event-row"
                                />
                              </div>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "hydrate": false,
                          "isReadyForCommit": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": MyEvents {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {},
                      "refs": Object {},
                      "state": Object {
                        "myEvents": Array [],
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 24,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div>
                                  <nav
                                    class="navbar navbar-toggleable-md navbar-light bg-faded"
                                  >
                                    <button
                                      aria-controls="navbarText"
                                      aria-expanded="false"
                                      aria-label="Toggle navigation"
                                      class="navbar-toggler navbar-toggler-right"
                                      data-target="#navbarText"
                                      data-toggle="collapse"
                                      type="button"
                                    >
                                      <span
                                        class="navbar-toggler-icon"
                                      />
                                    </button>
                                    <a
                                      class="navbar-brand"
                                      href="/"
                                    >
                                      EVENTS MANAGER
                                    </a>
                                    <div
                                      class="collapse navbar-collapse"
                                      id="navbarText"
                                    >
                                      <ul
                                        class="navbar-nav ml-auto"
                                      >
                                        <li
                                          class="nav-item active"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/"
                                          >
                                            Home 
                                            <span
                                              class="sr-only"
                                            >
                                              (current)
                                            </span>
                                          </a>
                                        </li>
                                        <li
                                          class="nav-item"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/addevent"
                                          >
                                            Add Event
                                          </a>
                                        </li>
                                        <li
                                          class="nav-item"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/centers"
                                          >
                                            Centers
                                          </a>
                                        </li>
                                        <li
                                          class="nav-item"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/SignOut"
                                          >
                                            Sign Out 
                                          </a>
                                        </li>
                                      </ul>
                                    </div>
                                  </nav>
                                  <div
                                    class="container events"
                                  >
                                    <div
                                      class="row event-row"
                                    />
                                  </div>
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
                                  />,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
                                  />,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
                            />,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div>
                                <nav
                                  class="navbar navbar-toggleable-md navbar-light bg-faded"
                                >
                                  <button
                                    aria-controls="navbarText"
                                    aria-expanded="false"
                                    aria-label="Toggle navigation"
                                    class="navbar-toggler navbar-toggler-right"
                                    data-target="#navbarText"
                                    data-toggle="collapse"
                                    type="button"
                                  >
                                    <span
                                      class="navbar-toggler-icon"
                                    />
                                  </button>
                                  <a
                                    class="navbar-brand"
                                    href="/"
                                  >
                                    EVENTS MANAGER
                                  </a>
                                  <div
                                    class="collapse navbar-collapse"
                                    id="navbarText"
                                  >
                                    <ul
                                      class="navbar-nav ml-auto"
                                    >
                                      <li
                                        class="nav-item active"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/"
                                        >
                                          Home 
                                          <span
                                            class="sr-only"
                                          >
                                            (current)
                                          </span>
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/addevent"
                                        >
                                          Add Event
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/centers"
                                        >
                                          Centers
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/SignOut"
                                        >
                                          Sign Out 
                                        </a>
                                      </li>
                                    </ul>
                                  </div>
                                </nav>
                                <div
                                  class="container events"
                                >
                                  <div
                                    class="row event-row"
                                  />
                                </div>
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <NavBar
                              page="MyEvents"
                            />,
                            <div
                              className="container events"
                            >
                              <div
                                className="row event-row"
                              />
                            </div>,
                          ],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div>
                          <nav
                            class="navbar navbar-toggleable-md navbar-light bg-faded"
                          >
                            <button
                              aria-controls="navbarText"
                              aria-expanded="false"
                              aria-label="Toggle navigation"
                              class="navbar-toggler navbar-toggler-right"
                              data-target="#navbarText"
                              data-toggle="collapse"
                              type="button"
                            >
                              <span
                                class="navbar-toggler-icon"
                              />
                            </button>
                            <a
                              class="navbar-brand"
                              href="/"
                            >
                              EVENTS MANAGER
                            </a>
                            <div
                              class="collapse navbar-collapse"
                              id="navbarText"
                            >
                              <ul
                                class="navbar-nav ml-auto"
                              >
                                <li
                                  class="nav-item active"
                                >
                                  <a
                                    class="nav-link"
                                    href="/"
                                  >
                                    Home 
                                    <span
                                      class="sr-only"
                                    >
                                      (current)
                                    </span>
                                  </a>
                                </li>
                                <li
                                  class="nav-item"
                                >
                                  <a
                                    class="nav-link"
                                    href="/addevent"
                                  >
                                    Add Event
                                  </a>
                                </li>
                                <li
                                  class="nav-item"
                                >
                                  <a
                                    class="nav-link"
                                    href="/centers"
                                  >
                                    Centers
                                  </a>
                                </li>
                                <li
                                  class="nav-item"
                                >
                                  <a
                                    class="nav-link"
                                    href="/SignOut"
                                  >
                                    Sign Out 
                                  </a>
                                </li>
                              </ul>
                            </div>
                          </nav>
                          <div
                            class="container events"
                          >
                            <div
                              class="row event-row"
                            />
                          </div>
                        </div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 5,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": Object {
                        "myEvents": Array [],
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div>
                                  <nav
                                    class="navbar navbar-toggleable-md navbar-light bg-faded"
                                  >
                                    <button
                                      aria-controls="navbarText"
                                      aria-expanded="false"
                                      aria-label="Toggle navigation"
                                      class="navbar-toggler navbar-toggler-right"
                                      data-target="#navbarText"
                                      data-toggle="collapse"
                                      type="button"
                                    >
                                      <span
                                        class="navbar-toggler-icon"
                                      />
                                    </button>
                                    <a
                                      class="navbar-brand"
                                      href="/"
                                    >
                                      EVENTS MANAGER
                                    </a>
                                    <div
                                      class="collapse navbar-collapse"
                                      id="navbarText"
                                    >
                                      <ul
                                        class="navbar-nav ml-auto"
                                      >
                                        <li
                                          class="nav-item active"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/"
                                          >
                                            Home 
                                            <span
                                              class="sr-only"
                                            >
                                              (current)
                                            </span>
                                          </a>
                                        </li>
                                        <li
                                          class="nav-item"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/addevent"
                                          >
                                            Add Event
                                          </a>
                                        </li>
                                        <li
                                          class="nav-item"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/centers"
                                          >
                                            Centers
                                          </a>
                                        </li>
                                        <li
                                          class="nav-item"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/SignOut"
                                          >
                                            Sign Out 
                                          </a>
                                        </li>
                                      </ul>
                                    </div>
                                  </nav>
                                  <div
                                    class="container events"
                                  >
                                    <div
                                      class="row event-row"
                                    />
                                  </div>
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
                                  />,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
                                  />,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
                            />,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div>
                                <nav
                                  class="navbar navbar-toggleable-md navbar-light bg-faded"
                                >
                                  <button
                                    aria-controls="navbarText"
                                    aria-expanded="false"
                                    aria-label="Toggle navigation"
                                    class="navbar-toggler navbar-toggler-right"
                                    data-target="#navbarText"
                                    data-toggle="collapse"
                                    type="button"
                                  >
                                    <span
                                      class="navbar-toggler-icon"
                                    />
                                  </button>
                                  <a
                                    class="navbar-brand"
                                    href="/"
                                  >
                                    EVENTS MANAGER
                                  </a>
                                  <div
                                    class="collapse navbar-collapse"
                                    id="navbarText"
                                  >
                                    <ul
                                      class="navbar-nav ml-auto"
                                    >
                                      <li
                                        class="nav-item active"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/"
                                        >
                                          Home 
                                          <span
                                            class="sr-only"
                                          >
                                            (current)
                                          </span>
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/addevent"
                                        >
                                          Add Event
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/centers"
                                        >
                                          Centers
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/SignOut"
                                        >
                                          Sign Out 
                                        </a>
                                      </li>
                                    </ul>
                                  </div>
                                </nav>
                                <div
                                  class="container events"
                                >
                                  <div
                                    class="row event-row"
                                  />
                                </div>
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": MyEvents {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {},
                        "refs": Object {},
                        "state": Object {
                          "myEvents": Array [],
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [],
                      "className": "row event-row",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="row event-row"
                    />,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <div
                      className="row event-row"
                    />,
                    "className": "container events",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div>
                                  <nav
                                    class="navbar navbar-toggleable-md navbar-light bg-faded"
                                  >
                                    <button
                                      aria-controls="navbarText"
                                      aria-expanded="false"
                                      aria-label="Toggle navigation"
                                      class="navbar-toggler navbar-toggler-right"
                                      data-target="#navbarText"
                                      data-toggle="collapse"
                                      type="button"
                                    >
                                      <span
                                        class="navbar-toggler-icon"
                                      />
                                    </button>
                                    <a
                                      class="navbar-brand"
                                      href="/"
                                    >
                                      EVENTS MANAGER
                                    </a>
                                    <div
                                      class="collapse navbar-collapse"
                                      id="navbarText"
                                    >
                                      <ul
                                        class="navbar-nav ml-auto"
                                      >
                                        <li
                                          class="nav-item active"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/"
                                          >
                                            Home 
                                            <span
                                              class="sr-only"
                                            >
                                              (current)
                                            </span>
                                          </a>
                                        </li>
                                        <li
                                          class="nav-item"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/addevent"
                                          >
                                            Add Event
                                          </a>
                                        </li>
                                        <li
                                          class="nav-item"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/centers"
                                          >
                                            Centers
                                          </a>
                                        </li>
                                        <li
                                          class="nav-item"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/SignOut"
                                          >
                                            Sign Out 
                                          </a>
                                        </li>
                                      </ul>
                                    </div>
                                  </nav>
                                  <div
                                    class="container events"
                                  >
                                    <div
                                      class="row event-row"
                                    />
                                  </div>
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
                                  />,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
                                  />,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
                            />,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div>
                                <nav
                                  class="navbar navbar-toggleable-md navbar-light bg-faded"
                                >
                                  <button
                                    aria-controls="navbarText"
                                    aria-expanded="false"
                                    aria-label="Toggle navigation"
                                    class="navbar-toggler navbar-toggler-right"
                                    data-target="#navbarText"
                                    data-toggle="collapse"
                                    type="button"
                                  >
                                    <span
                                      class="navbar-toggler-icon"
                                    />
                                  </button>
                                  <a
                                    class="navbar-brand"
                                    href="/"
                                  >
                                    EVENTS MANAGER
                                  </a>
                                  <div
                                    class="collapse navbar-collapse"
                                    id="navbarText"
                                  >
                                    <ul
                                      class="navbar-nav ml-auto"
                                    >
                                      <li
                                        class="nav-item active"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/"
                                        >
                                          Home 
                                          <span
                                            class="sr-only"
                                          >
                                            (current)
                                          </span>
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/addevent"
                                        >
                                          Add Event
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/centers"
                                        >
                                          Centers
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/SignOut"
                                        >
                                          Sign Out 
                                        </a>
                                      </li>
                                    </ul>
                                  </div>
                                </nav>
                                <div
                                  class="container events"
                                >
                                  <div
                                    class="row event-row"
                                  />
                                </div>
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 5,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": Object {
                        "myEvents": Array [],
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div>
                                  <nav
                                    class="navbar navbar-toggleable-md navbar-light bg-faded"
                                  >
                                    <button
                                      aria-controls="navbarText"
                                      aria-expanded="false"
                                      aria-label="Toggle navigation"
                                      class="navbar-toggler navbar-toggler-right"
                                      data-target="#navbarText"
                                      data-toggle="collapse"
                                      type="button"
                                    >
                                      <span
                                        class="navbar-toggler-icon"
                                      />
                                    </button>
                                    <a
                                      class="navbar-brand"
                                      href="/"
                                    >
                                      EVENTS MANAGER
                                    </a>
                                    <div
                                      class="collapse navbar-collapse"
                                      id="navbarText"
                                    >
                                      <ul
                                        class="navbar-nav ml-auto"
                                      >
                                        <li
                                          class="nav-item active"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/"
                                          >
                                            Home 
                                            <span
                                              class="sr-only"
                                            >
                                              (current)
                                            </span>
                                          </a>
                                        </li>
                                        <li
                                          class="nav-item"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/addevent"
                                          >
                                            Add Event
                                          </a>
                                        </li>
                                        <li
                                          class="nav-item"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/centers"
                                          >
                                            Centers
                                          </a>
                                        </li>
                                        <li
                                          class="nav-item"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/SignOut"
                                          >
                                            Sign Out 
                                          </a>
                                        </li>
                                      </ul>
                                    </div>
                                  </nav>
                                  <div
                                    class="container events"
                                  >
                                    <div
                                      class="row event-row"
                                    />
                                  </div>
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
                                  />,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
                                  />,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
                            />,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div>
                                <nav
                                  class="navbar navbar-toggleable-md navbar-light bg-faded"
                                >
                                  <button
                                    aria-controls="navbarText"
                                    aria-expanded="false"
                                    aria-label="Toggle navigation"
                                    class="navbar-toggler navbar-toggler-right"
                                    data-target="#navbarText"
                                    data-toggle="collapse"
                                    type="button"
                                  >
                                    <span
                                      class="navbar-toggler-icon"
                                    />
                                  </button>
                                  <a
                                    class="navbar-brand"
                                    href="/"
                                  >
                                    EVENTS MANAGER
                                  </a>
                                  <div
                                    class="collapse navbar-collapse"
                                    id="navbarText"
                                  >
                                    <ul
                                      class="navbar-nav ml-auto"
                                    >
                                      <li
                                        class="nav-item active"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/"
                                        >
                                          Home 
                                          <span
                                            class="sr-only"
                                          >
                                            (current)
                                          </span>
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/addevent"
                                        >
                                          Add Event
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/centers"
                                        >
                                          Centers
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/SignOut"
                                        >
                                          Sign Out 
                                        </a>
                                      </li>
                                    </ul>
                                  </div>
                                </nav>
                                <div
                                  class="container events"
                                >
                                  <div
                                    class="row event-row"
                                  />
                                </div>
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": MyEvents {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {},
                        "refs": Object {},
                        "state": Object {
                          "myEvents": Array [],
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <NavBar
                          page="MyEvents"
                        />,
                        <div
                          className="container events"
                        >
                          <div
                            className="row event-row"
                          />
                        </div>,
                      ],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div>
                                  <nav
                                    class="navbar navbar-toggleable-md navbar-light bg-faded"
                                  >
                                    <button
                                      aria-controls="navbarText"
                                      aria-expanded="false"
                                      aria-label="Toggle navigation"
                                      class="navbar-toggler navbar-toggler-right"
                                      data-target="#navbarText"
                                      data-toggle="collapse"
                                      type="button"
                                    >
                                      <span
                                        class="navbar-toggler-icon"
                                      />
                                    </button>
                                    <a
                                      class="navbar-brand"
                                      href="/"
                                    >
                                      EVENTS MANAGER
                                    </a>
                                    <div
                                      class="collapse navbar-collapse"
                                      id="navbarText"
                                    >
                                      <ul
                                        class="navbar-nav ml-auto"
                                      >
                                        <li
                                          class="nav-item active"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/"
                                          >
                                            Home 
                                            <span
                                              class="sr-only"
                                            >
                                              (current)
                                            </span>
                                          </a>
                                        </li>
                                        <li
                                          class="nav-item"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/addevent"
                                          >
                                            Add Event
                                          </a>
                                        </li>
                                        <li
                                          class="nav-item"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/centers"
                                          >
                                            Centers
                                          </a>
                                        </li>
                                        <li
                                          class="nav-item"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/SignOut"
                                          >
                                            Sign Out 
                                          </a>
                                        </li>
                                      </ul>
                                    </div>
                                  </nav>
                                  <div
                                    class="container events"
                                  >
                                    <div
                                      class="row event-row"
                                    />
                                  </div>
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
                                  />,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
                                  />,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
                            />,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div>
                                <nav
                                  class="navbar navbar-toggleable-md navbar-light bg-faded"
                                >
                                  <button
                                    aria-controls="navbarText"
                                    aria-expanded="false"
                                    aria-label="Toggle navigation"
                                    class="navbar-toggler navbar-toggler-right"
                                    data-target="#navbarText"
                                    data-toggle="collapse"
                                    type="button"
                                  >
                                    <span
                                      class="navbar-toggler-icon"
                                    />
                                  </button>
                                  <a
                                    class="navbar-brand"
                                    href="/"
                                  >
                                    EVENTS MANAGER
                                  </a>
                                  <div
                                    class="collapse navbar-collapse"
                                    id="navbarText"
                                  >
                                    <ul
                                      class="navbar-nav ml-auto"
                                    >
                                      <li
                                        class="nav-item active"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/"
                                        >
                                          Home 
                                          <span
                                            class="sr-only"
                                          >
                                            (current)
                                          </span>
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/addevent"
                                        >
                                          Add Event
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/centers"
                                        >
                                          Centers
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/SignOut"
                                        >
                                          Sign Out 
                                        </a>
                                      </li>
                                    </ul>
                                  </div>
                                </nav>
                                <div
                                  class="container events"
                                >
                                  <div
                                    class="row event-row"
                                  />
                                </div>
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 5,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": Object {
                        "myEvents": Array [],
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 3,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {},
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div>
                                  <nav
                                    class="navbar navbar-toggleable-md navbar-light bg-faded"
                                  >
                                    <button
                                      aria-controls="navbarText"
                                      aria-expanded="false"
                                      aria-label="Toggle navigation"
                                      class="navbar-toggler navbar-toggler-right"
                                      data-target="#navbarText"
                                      data-toggle="collapse"
                                      type="button"
                                    >
                                      <span
                                        class="navbar-toggler-icon"
                                      />
                                    </button>
                                    <a
                                      class="navbar-brand"
                                      href="/"
                                    >
                                      EVENTS MANAGER
                                    </a>
                                    <div
                                      class="collapse navbar-collapse"
                                      id="navbarText"
                                    >
                                      <ul
                                        class="navbar-nav ml-auto"
                                      >
                                        <li
                                          class="nav-item active"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/"
                                          >
                                            Home 
                                            <span
                                              class="sr-only"
                                            >
                                              (current)
                                            </span>
                                          </a>
                                        </li>
                                        <li
                                          class="nav-item"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/addevent"
                                          >
                                            Add Event
                                          </a>
                                        </li>
                                        <li
                                          class="nav-item"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/centers"
                                          >
                                            Centers
                                          </a>
                                        </li>
                                        <li
                                          class="nav-item"
                                        >
                                          <a
                                            class="nav-link"
                                            href="/SignOut"
                                          >
                                            Sign Out 
                                          </a>
                                        </li>
                                      </ul>
                                    </div>
                                  </nav>
                                  <div
                                    class="container events"
                                  >
                                    <div
                                      class="row event-row"
                                    />
                                  </div>
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "hydrate": false,
                              "isReadyForCommit": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
                                  />,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "nextCallback": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={Object {}}
                                  />,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={Object {}}
                            />,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div>
                                <nav
                                  class="navbar navbar-toggleable-md navbar-light bg-faded"
                                >
                                  <button
                                    aria-controls="navbarText"
                                    aria-expanded="false"
                                    aria-label="Toggle navigation"
                                    class="navbar-toggler navbar-toggler-right"
                                    data-target="#navbarText"
                                    data-toggle="collapse"
                                    type="button"
                                  >
                                    <span
                                      class="navbar-toggler-icon"
                                    />
                                  </button>
                                  <a
                                    class="navbar-brand"
                                    href="/"
                                  >
                                    EVENTS MANAGER
                                  </a>
                                  <div
                                    class="collapse navbar-collapse"
                                    id="navbarText"
                                  >
                                    <ul
                                      class="navbar-nav ml-auto"
                                    >
                                      <li
                                        class="nav-item active"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/"
                                        >
                                          Home 
                                          <span
                                            class="sr-only"
                                          >
                                            (current)
                                          </span>
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/addevent"
                                        >
                                          Add Event
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/centers"
                                        >
                                          Centers
                                        </a>
                                      </li>
                                      <li
                                        class="nav-item"
                                      >
                                        <a
                                          class="nav-link"
                                          href="/SignOut"
                                        >
                                          Sign Out 
                                        </a>
                                      </li>
                                    </ul>
                                  </div>
                                </nav>
                                <div
                                  class="container events"
                                >
                                  <div
                                    class="row event-row"
                                  />
                                </div>
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "hydrate": false,
                            "isReadyForCommit": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": MyEvents {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {},
                        "refs": Object {},
                        "state": Object {
                          "myEvents": Array [],
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": <div>
                      <nav
                        class="navbar navbar-toggleable-md navbar-light bg-faded"
                      >
                        <button
                          aria-controls="navbarText"
                          aria-expanded="false"
                          aria-label="Toggle navigation"
                          class="navbar-toggler navbar-toggler-right"
                          data-target="#navbarText"
                          data-toggle="collapse"
                          type="button"
                        >
                          <span
                            class="navbar-toggler-icon"
                          />
                        </button>
                        <a
                          class="navbar-brand"
                          href="/"
                        >
                          EVENTS MANAGER
                        </a>
                        <div
                          class="collapse navbar-collapse"
                          id="navbarText"
                        >
                          <ul
                            class="navbar-nav ml-auto"
                          >
                            <li
                              class="nav-item active"
                            >
                              <a
                                class="nav-link"
                                href="/"
                              >
                                Home 
                                <span
                                  class="sr-only"
                                >
                                  (current)
                                </span>
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/addevent"
                              >
                                Add Event
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/centers"
                              >
                                Centers
                              </a>
                            </li>
                            <li
                              class="nav-item"
                            >
                              <a
                                class="nav-link"
                                href="/SignOut"
                              >
                                Sign Out 
                              </a>
                            </li>
                          </ul>
                        </div>
                      </nav>
                      <div
                        class="container events"
                      >
                        <div
                          class="row event-row"
                        />
                      </div>
                    </div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": <div
                    class="container events"
                  >
                    <div
                      class="row event-row"
                    />
                  </div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": [Circular],
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "page": "MyEvents",
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "page": "MyEvents",
            },
            "ref": null,
            "rendered": Object {
              "instance": <nav
                class="navbar navbar-toggleable-md navbar-light bg-faded"
              >
                <button
                  aria-controls="navbarText"
                  aria-expanded="false"
                  aria-label="Toggle navigation"
                  class="navbar-toggler navbar-toggler-right"
                  data-target="#navbarText"
                  data-toggle="collapse"
                  type="button"
                >
                  <span
                    class="navbar-toggler-icon"
                  />
                </button>
                <a
                  class="navbar-brand"
                  href="/"
                >
                  EVENTS MANAGER
                </a>
                <div
                  class="collapse navbar-collapse"
                  id="navbarText"
                >
                  <ul
                    class="navbar-nav ml-auto"
                  >
                    <li
                      class="nav-item active"
                    >
                      <a
                        class="nav-link"
                        href="/"
                      >
                        Home 
                        <span
                          class="sr-only"
                        >
                          (current)
                        </span>
                      </a>
                    </li>
                    <li
                      class="nav-item"
                    >
                      <a
                        class="nav-link"
                        href="/addevent"
                      >
                        Add Event
                      </a>
                    </li>
                    <li
                      class="nav-item"
                    >
                      <a
                        class="nav-link"
                        href="/centers"
                      >
                        Centers
                      </a>
                    </li>
                    <li
                      class="nav-item"
                    >
                      <a
                        class="nav-link"
                        href="/SignOut"
                      >
                        Sign Out 
                      </a>
                    </li>
                  </ul>
                </div>
              </nav>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <button
                    aria-controls="navbarText"
                    aria-expanded="false"
                    aria-label="Toggle navigation"
                    className="navbar-toggler navbar-toggler-right"
                    data-target="#navbarText"
                    data-toggle="collapse"
                    type="button"
                  >
                    <span
                      className="navbar-toggler-icon"
                    />
                  </button>,
                  <a
                    className="navbar-brand"
                    href="/"
                  >
                    EVENTS MANAGER
                  </a>,
                  <div
                    className="collapse navbar-collapse"
                    id="navbarText"
                  >
                    <ul
                      className="navbar-nav ml-auto"
                    >
                      <li
                        className="nav-item active"
                      >
                        <a
                          className="nav-link"
                          href="/"
                        >
                          Home 
                          <span
                            className="sr-only"
                          >
                            (current)
                          </span>
                        </a>
                      </li>
                      <li
                        className="nav-item"
                      >
                        <a
                          className="nav-link"
                          href="/addevent"
                        >
                          Add Event
                        </a>
                      </li>
                      <li
                        className="nav-item"
                      >
                        <a
                          className="nav-link"
                          href="/centers"
                        >
                          Centers
                        </a>
                      </li>
                      <li
                        className="nav-item"
                      >
                        <a
                          className="nav-link"
                          href="/SignOut"
                        >
                          Sign Out 
                        </a>
                      </li>
                    </ul>
                  </div>,
                ],
                "className": "navbar navbar-toggleable-md navbar-light bg-faded",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <button
                    aria-controls="navbarText"
                    aria-expanded="false"
                    aria-label="Toggle navigation"
                    class="navbar-toggler navbar-toggler-right"
                    data-target="#navbarText"
                    data-toggle="collapse"
                    type="button"
                  >
                    <span
                      class="navbar-toggler-icon"
                    />
                  </button>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "aria-controls": "navbarText",
                    "aria-expanded": "false",
                    "aria-label": "Toggle navigation",
                    "children": <span
                      className="navbar-toggler-icon"
                    />,
                    "className": "navbar-toggler navbar-toggler-right",
                    "data-target": "#navbarText",
                    "data-toggle": "collapse",
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <span
                        class="navbar-toggler-icon"
                      />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "navbar-toggler-icon",
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "span",
                    },
                  ],
                  "type": "button",
                },
                Object {
                  "instance": <a
                    class="navbar-brand"
                    href="/"
                  >
                    EVENTS MANAGER
                  </a>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "EVENTS MANAGER",
                    "className": "navbar-brand",
                    "href": "/",
                  },
                  "ref": null,
                  "rendered": Array [
                    "EVENTS MANAGER",
                  ],
                  "type": "a",
                },
                Object {
                  "instance": <div
                    class="collapse navbar-collapse"
                    id="navbarText"
                  >
                    <ul
                      class="navbar-nav ml-auto"
                    >
                      <li
                        class="nav-item active"
                      >
                        <a
                          class="nav-link"
                          href="/"
                        >
                          Home 
                          <span
                            class="sr-only"
                          >
                            (current)
                          </span>
                        </a>
                      </li>
                      <li
                        class="nav-item"
                      >
                        <a
                          class="nav-link"
                          href="/addevent"
                        >
                          Add Event
                        </a>
                      </li>
                      <li
                        class="nav-item"
                      >
                        <a
                          class="nav-link"
                          href="/centers"
                        >
                          Centers
                        </a>
                      </li>
                      <li
                        class="nav-item"
                      >
                        <a
                          class="nav-link"
                          href="/SignOut"
                        >
                          Sign Out 
                        </a>
                      </li>
                    </ul>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <ul
                      className="navbar-nav ml-auto"
                    >
                      <li
                        className="nav-item active"
                      >
                        <a
                          className="nav-link"
                          href="/"
                        >
                          Home 
                          <span
                            className="sr-only"
                          >
                            (current)
                          </span>
                        </a>
                      </li>
                      <li
                        className="nav-item"
                      >
                        <a
                          className="nav-link"
                          href="/addevent"
                        >
                          Add Event
                        </a>
                      </li>
                      <li
                        className="nav-item"
                      >
                        <a
                          className="nav-link"
                          href="/centers"
                        >
                          Centers
                        </a>
                      </li>
                      <li
                        className="nav-item"
                      >
                        <a
                          className="nav-link"
                          href="/SignOut"
                        >
                          Sign Out 
                        </a>
                      </li>
                    </ul>,
                    "className": "collapse navbar-collapse",
                    "id": "navbarText",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <ul
                        class="navbar-nav ml-auto"
                      >
                        <li
                          class="nav-item active"
                        >
                          <a
                            class="nav-link"
                            href="/"
                          >
                            Home 
                            <span
                              class="sr-only"
                            >
                              (current)
                            </span>
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/addevent"
                          >
                            Add Event
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/centers"
                          >
                            Centers
                          </a>
                        </li>
                        <li
                          class="nav-item"
                        >
                          <a
                            class="nav-link"
                            href="/SignOut"
                          >
                            Sign Out 
                          </a>
                        </li>
                      </ul>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <li
                            className="nav-item active"
                          >
                            <a
                              className="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                className="sr-only"
                              >
                                (current)
                              </span>
                            </a>
                          </li>,
                          <li
                            className="nav-item"
                          >
                            <a
                              className="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>
                          </li>,
                          <li
                            className="nav-item"
                          >
                            <a
                              className="nav-link"
                              href="/centers"
                            >
                              Centers
                            </a>
                          </li>,
                          <li
                            className="nav-item"
                          >
                            <a
                              className="nav-link"
                              href="/SignOut"
                            >
                              Sign Out 
                            </a>
                          </li>,
                        ],
                        "className": "navbar-nav ml-auto",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <li
                            class="nav-item active"
                          >
                            <a
                              class="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                class="sr-only"
                              >
                                (current)
                              </span>
                            </a>
                          </li>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <a
                              className="nav-link"
                              href="/"
                            >
                              Home 
                              <span
                                className="sr-only"
                              >
                                (current)
                              </span>
                            </a>,
                            "className": "nav-item active",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": <a
                                class="nav-link"
                                href="/"
                              >
                                Home 
                                <span
                                  class="sr-only"
                                >
                                  (current)
                                </span>
                              </a>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": Array [
                                  "Home ",
                                  <span
                                    className="sr-only"
                                  >
                                    (current)
                                  </span>,
                                ],
                                "className": "nav-link",
                                "href": "/",
                              },
                              "ref": null,
                              "rendered": Array [
                                "Home ",
                                Object {
                                  "instance": <span
                                    class="sr-only"
                                  >
                                    (current)
                                  </span>,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "(current)",
                                    "className": "sr-only",
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    "(current)",
                                  ],
                                  "type": "span",
                                },
                              ],
                              "type": "a",
                            },
                          ],
                          "type": "li",
                        },
                        Object {
                          "instance": <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>
                          </li>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <a
                              className="nav-link"
                              href="/addevent"
                            >
                              Add Event
                            </a>,
                            "className": "nav-item",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": <a
                                class="nav-link"
                                href="/addevent"
                              >
                                Add Event
                              </a>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Add Event",
                                "className": "nav-link",
                                "href": "/addevent",
                              },
                              "ref": null,
                              "rendered": Array [
                                "Add Event",
                              ],
                              "type": "a",
                            },
                          ],
                          "type": "li",
                        },
                        Object {
                          "instance": <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/centers"
                            >
                              Centers
                            </a>
                          </li>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <a
                              className="nav-link"
                              href="/centers"
                            >
                              Centers
                            </a>,
                            "className": "nav-item",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": <a
                                class="nav-link"
                                href="/centers"
                              >
                                Centers
                              </a>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Centers",
                                "className": "nav-link",
                                "href": "/centers",
                              },
                              "ref": null,
                              "rendered": Array [
                                "Centers",
                              ],
                              "type": "a",
                            },
                          ],
                          "type": "li",
                        },
                        Object {
                          "instance": <li
                            class="nav-item"
                          >
                            <a
                              class="nav-link"
                              href="/SignOut"
                            >
                              Sign Out 
                            </a>
                          </li>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <a
                              className="nav-link"
                              href="/SignOut"
                            >
                              Sign Out 
                            </a>,
                            "className": "nav-item",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": <a
                                class="nav-link"
                                href="/SignOut"
                              >
                                Sign Out 
                              </a>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Sign Out ",
                                "className": "nav-link",
                                "href": "/SignOut",
                              },
                              "ref": null,
                              "rendered": Array [
                                "Sign Out ",
                              ],
                              "type": "a",
                            },
                          ],
                          "type": "li",
                        },
                      ],
                      "type": "ul",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "nav",
            },
            "type": [Function],
          },
          Object {
            "instance": <div
              class="container events"
            >
              <div
                class="row event-row"
              />
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="row event-row"
              />,
              "className": "container events",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <div
                  class="row event-row"
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [],
                  "className": "row event-row",
                },
                "ref": null,
                "rendered": Array [
                  Array [],
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
